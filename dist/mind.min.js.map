{"version":3,"file":"mind.min.js","sources":["../src/events.js","../src/utils/dom.js","../src/Viewport.js","../src/options.js","../src/tooltip.js","../src/EventDeletage.js","../node_modules/deepmerge/dist/umd.js","../src/utils/util.js","../src/Mind.js","../src/Node.js","../src/connections/topicLine.js","../src/topic.js","../src/connections/curve.js","../src/RootTopic.js","../src/Tooltip.js","../src/OrgMind.js","../src/connections/connection.js","../src/connections/LinkLine.js","../src/FlowMind.js","../src/index.js"],"sourcesContent":["// 获取对象的所有事件记录表\nexport function getListenerMap(target, create) {\n  let listenerMap = target.listenerMap\n  if (!listenerMap && create) {\n    listenerMap = target.listenerMap = {}\n  }\n\n  return listenerMap\n}\n\n// 获取对象单一事件类型的记录\nexport function getListeners(target, type) {\n  const listenerMap = getListenerMap(target)\n  return listenerMap && listenerMap[type]\n}\n\n// 清空对象的所有事件记录\nexport function cleanListenerMap(target) {\n  delete target.listenerMap\n}\n\n// 清空对象的单一事件类型的所有记录\nexport function cleanListeners(target, type) {\n  const listenerMap = getListenerMap(target)\n  listenerMap && delete listenerMap[type]\n}\n\n// 获取事件类型\nexport function getEventName(type) {\n  return type.split('.')[0]\n}\n\n// 移除单一事件绑定\nexport function removeListener(target, type, callback) {\n  const eventName = getEventName(type)\n  target.removeEventListener(eventName, callback)\n\n  const listeners = getListeners(target, type)\n\n  if (listeners) {\n    const index = listeners.findIndex(listener => listener === callback)\n\n    if (index !== -1) {\n      listeners.splice(index, 1)\n    }\n\n    if (!listeners.length) {\n      cleanListeners(target, type)\n    }\n  }\n}\n\n// 移除对象单一事件类型的所有事件绑定\nexport function removeListeners(target, type) {\n  const listeners = getListeners(target, type)\n  const eventName = getEventName(type)\n\n  if (listeners) {\n    listeners.forEach(listener => {\n      target.removeEventListener(eventName, listener)\n    })\n\n    cleanListeners(target, type)\n\n    const listenerMap = getListenerMap(target)\n\n    if (!Object.keys(listenerMap).length) {\n      cleanListenerMap(target)\n    }\n  }\n}\n\n// 移除对象所有的事件绑定\nexport function removeAllListeners(target) {\n  const listenerMap = getListenerMap(target)\n\n  if (listenerMap) {\n    for (const type in listenerMap) {\n      removeListeners(target, type)\n    }\n  }\n}\n\n// 事件绑定\nexport function on(target, type, callback) {\n  const eventName = getEventName(type)\n\n  target.addEventListener(eventName, callback)\n\n  const listenerMap = getListenerMap(target, true)\n  let listeners = listenerMap[type]\n\n  if (!listeners) {\n    listeners = listenerMap[type] = []\n  }\n\n  listeners.push(callback)\n}\n\n// 事件解绑\nexport function off(target, type, callback) {\n  const listenerMap = getListenerMap(target)\n\n  if (!listenerMap) return\n\n  if (callback) {\n    removeListener(target, type, callback)\n  } else if (type) {\n    removeListeners(target, type)\n  } else {\n    removeAllListeners(target)\n  }\n}\n","const doc = document\n\nexport const isDOM =\n  typeof HTMLElement === 'object'\n    ? obj => obj instanceof HTMLElement\n    : obj =>\n        obj &&\n        typeof obj === 'object' &&\n        obj.nodeType === 1 &&\n        typeof obj.nodeName === 'string'\n\nconst attrsWithPixel = [\n  'width',\n  'height',\n  'fontSize',\n  'borderRadius',\n  'padding',\n  'left',\n  'right',\n  'top',\n  'bottom',\n  'borderWidth',\n  'maxWidth'\n]\n\nexport const setElementStyle = (el, style) => {\n  for (const attr in style) {\n    if (attr === 'padding') {\n      el.style.padding = `${style.padding[0]}px ${style.padding[1]}px`\n    } else {\n      el.style[attr] = attrsWithPixel.includes(attr)\n        ? `${style[attr]}px`\n        : style[attr]\n    }\n  }\n}\n\nconst svgTags = ['svg', 'g', 'path']\n\nexport const createElement = (tag, attrs, parent) => {\n  let el\n\n  if (svgTags.includes(tag)) {\n    el = doc.createElementNS('http://www.w3.org/2000/svg', tag)\n  } else {\n    el = doc.createElement(tag)\n  }\n\n  for (const attr in attrs) {\n    el.setAttribute(attr, attrs[attr])\n  }\n\n  if (parent) {\n    parent.appendChild(el)\n  }\n\n  return el\n}\n\nexport const hasClass = (el, clsName) => {\n  const classes = el.className.split(' ')\n  return classes.includes(clsName)\n}\n\n// 为dom添加class类名\nexport const addClass = (el, cls) => {\n  if (!el || !cls) return\n\n  let curClass = el.className\n  const classes = cls.split(' ')\n\n  classes.forEach(clsName => {\n    if (!clsName) return\n\n    if (el.classList) {\n      el.classList.add(clsName)\n    } else if (!hasClass(el, clsName)) {\n      curClass += ' ' + clsName\n    }\n  })\n\n  if (!el.classList) {\n    el.className = curClass\n  }\n}\n\n// 移除dom的class类名\nexport const removeClass = (el, cls) => {\n  if (!el || !cls) return\n  var classes = cls.split(' ')\n  var curClass = ' ' + el.className + ' '\n\n  for (var i = 0, j = classes.length; i < j; i++) {\n    var clsName = classes[i]\n    if (!clsName) continue\n\n    if (el.classList) {\n      el.classList.remove(clsName)\n    } else if (hasClass(el, clsName)) {\n      curClass = curClass.replace(' ' + clsName + ' ', ' ')\n    }\n  }\n  if (!el.classList) {\n    el.className = trim(curClass)\n  }\n}\n","import * as Events from './events'\nimport {\n  createElement,\n  setElementStyle,\n  addClass,\n  removeClass\n} from './utils/dom'\n\nconst doc = document\n\nclass Viewport {\n  // 顶层实例\n  root = null\n\n  // 上层容器\n  $container = null\n\n  // 视图dom节点\n  $el = null\n\n  // 配置项\n  options = null\n\n  // 当前视图缩放比例\n  scale = 1\n\n  dragingFlag = false\n\n  constructor(root) {\n    this.root = root\n    this.$container = root.$el\n    this.options = root.options\n\n    this.create()\n    this.setStyle()\n    this.moveToCenter()\n    this.initEvents()\n  }\n\n  // 创建画布\n  create() {\n    this.$el = createElement('div', { class: 'mind-designer' }, this.$container)\n    this.$view = createElement('div', { class: 'mind-viewport' }, this.$el)\n  }\n\n  // 设置视图样式\n  setStyle() {\n    const { width, height, backgroundColor } = this.options\n    setElementStyle(this.$el, {\n      width,\n      height,\n      backgroundColor\n    })\n  }\n\n  // 移动到指定位置\n  moveTo(left, top) {\n    this.$container.scrollLeft = left\n    this.$container.scrollTop = top\n  }\n\n  // 将画布移动至中心位置\n  moveToCenter() {\n    const {\n      width: wrapW,\n      height: wrapH\n    } = this.$container.getBoundingClientRect()\n    const { width, height } = this.options\n\n    this.moveTo((width - wrapW) / 2, (height - wrapH) / 2)\n  }\n\n  // 注册事件\n  initEvents() {\n    Events.on(this.$el, 'mousedown.dragmove', this.onDragStart.bind(this))\n  }\n\n  // 拖动开始\n  onDragStart(event) {\n    event.stopPropagation()\n\n    const { pageX, pageY } = event\n    const { scrollLeft, scrollTop } = this.$container\n    this.dragStartMousePosition = {\n      pageX,\n      pageY\n    }\n    this.dragStartScroll = {\n      scrollLeft,\n      scrollTop\n    }\n\n    Events.on(doc, 'mousemove.dragmove', this.onDraging.bind(this))\n    Events.on(doc, 'mouseup.dragmove', this.onDragEnd.bind(this))\n  }\n\n  // 拖动中\n  onDraging(event) {\n    event.stopPropagation()\n\n    const { scrollLeft, scrollTop } = this.dragStartScroll\n    const { pageX, pageY } = this.dragStartMousePosition\n    const curScrollLeft = scrollLeft - event.pageX + pageX\n    const curScrollTop = scrollTop - event.pageY + pageY\n\n    this.moveTo(curScrollLeft, curScrollTop)\n\n    if (!this.dragingFlag) {\n      addClass(this.$el, 'mind-no-event')\n      this.dragingFlag = true\n    }\n  }\n\n  // 结束拖动\n  onDragEnd(e) {\n    Events.off(doc, 'mousemove.dragmove')\n    Events.off(doc, 'mouseup.dragmove')\n    this.dragingFlag = false\n    removeClass(this.$el, 'mind-no-event')\n  }\n\n  // 缩放\n  zoom(scale) {\n    this.scale = scale || 1\n    setElementStyle(this.$el, { transform: `scale(${this.scale})` })\n  }\n\n  // 放大\n  zoomIn() {\n    const { zoomMax, zoomStep } = this.options\n    this.zoom(Math.min(this.scale + zoomStep, zoomMax))\n  }\n\n  // 缩小\n  zoomOut() {\n    const { zoomMin, zoomStep } = this.options\n    this.zoom(Math.max(this.scale - zoomStep, zoomMin))\n  }\n\n  getZoom() {\n    return this.scale\n  }\n}\n\nexport default Viewport\n","export default {\n  lineColor: ['#FDB813', '#80BC42', '#e85d4e', '#127c97', '#ffcccc', '#67ccff'],\n  type: 'org', // org | diagram\n  width: 20000,\n  height: 20000,\n  draggable: false,\n  showConnectionLabel: true,\n  showTooltip: true,\n  tooltipDelay: 500,\n  tooltipFormat: null,\n  backgroundColor: '#fff',\n  zoomMax: 2,\n  zoomMin: 0.4,\n  zoomStep: 0.15,\n  rootMargin: 80,\n  branchMargin: 20,\n  branchShowIndex: false,\n\n  flowNodeMarginW: 200,\n  flowNodeMarginH: 60,\n  flowRootMargin: 200,\n\n  normalLineStyle: {\n    stroke: 'rgb(58, 169, 206)',\n    strokeWidth: 1,\n    strokeLinecap: 'square',\n    fill: 'none'\n  },\n\n  linkLineStyle: {\n    stroke: 'rgb(113, 203, 45)',\n    strokeWidth: 2,\n    strokeLinecap: 'square',\n    strokeLinejoin: 'round',\n    fill: 'none',\n    type: 'curve',\n    direction: 'horizontal'\n  },\n\n  onNodeClick: null\n}\n","import {\n  createElement,\n  setElementStyle,\n  addClass,\n  removeClass\n} from './utils/dom'\n\nconst body = document.body\nlet positionX = 0\nlet positionY = 0\nlet delayTimeout\n\nconst tooltip = {\n  $el: null,\n\n  init() {\n    if (tooltip.$el) return\n\n    tooltip.$el = createElement('div', {\n      class: 'mind-tooltip'\n    })\n\n    body.appendChild(tooltip.$el)\n  },\n\n  resetPosition() {\n    if (!tooltip.$el) return\n\n    const { width, height } = tooltip.$el.getBoundingClientRect()\n    const arrowHeight = 4\n    setElementStyle(tooltip.$el, {\n      left: positionX - width / 2,\n      top: positionY - height - arrowHeight\n    })\n  },\n\n  show(delay) {\n    if (!tooltip.$el) {\n      tooltip.init()\n    }\n\n    if (delay) {\n      delayTimeout = setTimeout(() => {\n        addClass(tooltip.$el, 'show')\n        tooltip.resetPosition()\n      }, delay)\n    } else {\n      addClass(tooltip.$el, 'show')\n      tooltip.resetPosition()\n    }\n  },\n\n  hide() {\n    if (!tooltip.$el) return\n\n    if (delayTimeout) {\n      clearTimeout(delayTimeout)\n      delayTimeout = null\n    }\n\n    removeClass(tooltip.$el, 'show')\n    tooltip.$el.style.left = ''\n    tooltip.$el.style.top = ''\n  },\n\n  setContent(content) {\n    if (!tooltip.$el) {\n      tooltip.init()\n    }\n\n    tooltip.$el.innerHTML = content\n  },\n\n  setPosition(left, top) {\n    positionX = left\n    positionY = top\n  },\n\n  destroy() {\n    tooltip.$el = null\n\n    const $tooltip = document.body.querySelector('.mind-tooltip')\n    if (!$tooltip) return\n    const parentNode = $tooltip.parentNode\n    parentNode.removeChild($tooltip)\n  }\n}\n\nexport default tooltip\n","let _matcher\nlet _level = 0\nlet _id = 0\nconst _handlers = {}\nconst _gatorInstances = {}\n\nfunction _addEvent(gator, type, callback) {\n  // blur and focus do not bubble up but if you use event capturing\n  // then you will get them\n  type = type.split('.')[0]\n  var useCapture = type == 'blur' || type == 'focus'\n  gator.element.addEventListener(type, callback, useCapture)\n}\n\nfunction _cancel(e) {\n  e.preventDefault()\n  e.stopPropagation()\n}\n\n/**\n * returns function to use for determining if an element\n * matches a query selector\n *\n * @returns {Function}\n */\nfunction _getMatcher(element) {\n  if (_matcher) {\n    return _matcher\n  }\n\n  if (element.matches) {\n    _matcher = element.matches\n    return _matcher\n  }\n\n  if (element.webkitMatchesSelector) {\n    _matcher = element.webkitMatchesSelector\n    return _matcher\n  }\n\n  if (element.mozMatchesSelector) {\n    _matcher = element.mozMatchesSelector\n    return _matcher\n  }\n\n  if (element.msMatchesSelector) {\n    _matcher = element.msMatchesSelector\n    return _matcher\n  }\n\n  if (element.oMatchesSelector) {\n    _matcher = element.oMatchesSelector\n    return _matcher\n  }\n\n  // if it doesn't match a native browser method\n  // fall back to the gator function\n  _matcher = Gator.matchesSelector\n  return _matcher\n}\n\n/**\n * determines if the specified element matches a given selector\n *\n * @param {Node} element - the element to compare against the selector\n * @param {string} selector\n * @param {Node} boundElement - the element the listener was attached to\n * @returns {void|Node}\n */\nfunction _matchesSelector(element, selector, boundElement) {\n  // no selector means this event was bound directly to this element\n  if (selector == '_root') {\n    return boundElement\n  }\n\n  // if we have moved up to the element you bound the event to\n  // then we have come too far\n  if (element === boundElement) {\n    return\n  }\n\n  // if this is a match then we are done!\n  if (_getMatcher(element).call(element, selector)) {\n    return element\n  }\n\n  // if this element did not match but has a parent we should try\n  // going up the tree to see if any of the parent elements match\n  // for example if you are looking for a click on an <a> tag but there\n  // is a <span> inside of the a tag that it is the target,\n  // it should still work\n  if (element.parentNode) {\n    _level++\n    return _matchesSelector(element.parentNode, selector, boundElement)\n  }\n}\n\nfunction _addHandler(gator, event, selector, callback) {\n  if (!_handlers[gator.id]) {\n    _handlers[gator.id] = {}\n  }\n\n  if (!_handlers[gator.id][event]) {\n    _handlers[gator.id][event] = {}\n  }\n\n  if (!_handlers[gator.id][event][selector]) {\n    _handlers[gator.id][event][selector] = []\n  }\n\n  _handlers[gator.id][event][selector].push(callback)\n}\n\nfunction _removeHandler(gator, event, selector, callback) {\n  // if there are no events tied to this element at all\n  // then don't do anything\n  if (!_handlers[gator.id]) {\n    return\n  }\n\n  // if there is no event type specified then remove all events\n  // example: Gator(element).off()\n  if (!event) {\n    for (var type in _handlers[gator.id]) {\n      if (_handlers[gator.id].hasOwnProperty(type)) {\n        _handlers[gator.id][type] = {}\n      }\n    }\n    return\n  }\n\n  // if no callback or selector is specified remove all events of this type\n  // example: Gator(element).off('click')\n  if (!callback && !selector) {\n    _handlers[gator.id][event] = {}\n    return\n  }\n\n  // if a selector is specified but no callback remove all events\n  // for this selector\n  // example: Gator(element).off('click', '.sub-element')\n  if (!callback) {\n    delete _handlers[gator.id][event][selector]\n    return\n  }\n\n  // if we have specified an event type, selector, and callback then we\n  // need to make sure there are callbacks tied to this selector to\n  // begin with.  if there aren't then we can stop here\n  if (!_handlers[gator.id][event][selector]) {\n    return\n  }\n\n  // if there are then loop through all the callbacks and if we find\n  // one that matches remove it from the array\n  for (var i = 0; i < _handlers[gator.id][event][selector].length; i++) {\n    if (_handlers[gator.id][event][selector][i] === callback) {\n      _handlers[gator.id][event][selector].splice(i, 1)\n      break\n    }\n  }\n}\n\nfunction _handleEvent(id, e, type) {\n  if (!_handlers[id][type]) {\n    return\n  }\n\n  var target = e.target || e.srcElement,\n    selector,\n    match,\n    matches = {},\n    i = 0,\n    j = 0\n\n  // find all events that match\n  _level = 0\n  for (selector in _handlers[id][type]) {\n    if (_handlers[id][type].hasOwnProperty(selector)) {\n      match = _matchesSelector(target, selector, _gatorInstances[id].element)\n\n      if (\n        match &&\n        Gator.matchesEvent(\n          type,\n          _gatorInstances[id].element,\n          match,\n          selector == '_root',\n          e\n        )\n      ) {\n        _level++\n        _handlers[id][type][selector].match = match\n        matches[_level] = _handlers[id][type][selector]\n      }\n    }\n  }\n\n  // stopPropagation() fails to set cancelBubble to true in Webkit\n  // @see http://code.google.com/p/chromium/issues/detail?id=162270\n  e.stopPropagation = function() {\n    e.cancelBubble = true\n  }\n\n  for (i = 0; i <= _level; i++) {\n    if (matches[i]) {\n      for (j = 0; j < matches[i].length; j++) {\n        if (matches[i][j].call(matches[i].match, e) === false) {\n          Gator.cancel(e)\n          return\n        }\n\n        if (e.cancelBubble) {\n          return\n        }\n      }\n    }\n  }\n}\n\n/**\n * binds the specified events to the element\n *\n * @param {string|Array} events\n * @param {string} selector\n * @param {Function} callback\n * @param {boolean=} remove\n * @returns {Object}\n */\nfunction _bind(events, selector, callback, remove) {\n  // fail silently if you pass null or undefined as an alement\n  // in the Gator constructor\n  if (!this.element) {\n    return\n  }\n\n  if (!(events instanceof Array)) {\n    events = [events]\n  }\n\n  if (!callback && typeof selector == 'function') {\n    callback = selector\n    selector = '_root'\n  }\n\n  var id = this.id,\n    i\n\n  function _getGlobalCallback(type) {\n    return function(e) {\n      _handleEvent(id, e, type)\n    }\n  }\n\n  for (i = 0; i < events.length; i++) {\n    if (remove) {\n      _removeHandler(this, events[i], selector, callback)\n      continue\n    }\n\n    if (!_handlers[id] || !_handlers[id][events[i]]) {\n      Gator.addEvent(this, events[i], _getGlobalCallback(events[i]))\n    }\n\n    _addHandler(this, events[i], selector, callback)\n  }\n\n  return this\n}\n\n/**\n * Gator object constructor\n *\n * @param {Node} element\n */\nfunction Gator(element, id) {\n  // called as function\n  if (!(this instanceof Gator)) {\n    // only keep one Gator instance per node to make sure that\n    // we don't create a ton of new objects if you want to delegate\n    // multiple events from the same node\n    //\n    // for example: Gator(document).on(...\n    for (var key in _gatorInstances) {\n      if (_gatorInstances[key].element === element) {\n        return _gatorInstances[key]\n      }\n    }\n\n    _id++\n    _gatorInstances[_id] = new Gator(element, _id)\n\n    return _gatorInstances[_id]\n  }\n\n  this.element = element\n  this.id = id\n}\n\n/**\n * adds an event\n *\n * @param {string|Array} events\n * @param {string} selector\n * @param {Function} callback\n * @returns {Object}\n */\nGator.prototype.on = function(events, selector, callback) {\n  return _bind.call(this, events, selector, callback)\n}\n\n/**\n * removes an event\n *\n * @param {string|Array} events\n * @param {string} selector\n * @param {Function} callback\n * @returns {Object}\n */\nGator.prototype.off = function(events, selector, callback) {\n  return _bind.call(this, events, selector, callback, true)\n}\n\nGator.matchesSelector = function() {}\nGator.cancel = _cancel\nGator.addEvent = _addEvent\nGator.matchesEvent = function() {\n  return true\n}\n\nexport default Gator\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.deepmerge = factory());\n}(this, (function () { 'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nreturn deepmerge_1;\n\n})));\n","import deepmerge from 'deepmerge'\n\nexport const deepMerge = (...source) => {\n  source = source.filter(item => !!item)\n  return deepmerge.all(source, {\n    arrayMerge: (destinationArray, sourceArray) => sourceArray\n  })\n}\n\nexport const isDOM =\n  typeof HTMLElement === 'object'\n    ? obj => obj instanceof HTMLElement\n    : obj =>\n        obj &&\n        typeof obj === 'object' &&\n        obj.nodeType === 1 &&\n        typeof obj.nodeName === 'string'\n\nexport const treeToArray = (nodes, childKey = 'children') => {\n  let list = []\n\n  if (nodes instanceof Array) {\n    nodes.forEach(node => {\n      list.push(node)\n      list = list.concat(treeToArray(node[childKey]))\n    })\n  } else {\n    list.push(nodes)\n    list = list.concat(treeToArray(nodes[childKey]))\n  }\n\n  return list\n}\n\n/**\n * 判读两个矩形是否相交\n * @param {Object} rect1\n * @param {Object} rect2\n */\nexport const isRectOverlap = (rect1, rect2) => {\n  return !(\n    rect1.left > rect2.right ||\n    rect1.top > rect2.bottom ||\n    rect2.left > rect1.right ||\n    rect2.top > rect1.bottom\n  )\n}\n\n/**\n * 判断两个矩形垂直方向是否存在相交可能\n * @param {Object} rect1\n * @param {Object} rect2\n */\nexport const isRectVertOverlap = (rect1, rect2) => {\n  return (\n    Math.max(\n      Math.abs(rect1.top - rect2.bottom),\n      Math.abs(rect2.top - rect1.bottom)\n    ) <\n    rect1.height + rect2.height\n  )\n}\n\n/**\n * 判断两个矩形水平方向是否存在相交可能\n * @param {Object} rect1\n * @param {Object} rect2\n */\nexport const isRectHoriOverlap = (rect1, rect2) => {\n  return (\n    Math.max(\n      Math.abs(rect1.left - rect2.right),\n      Math.abs(rect2.left - rect1.right)\n    ) <\n    rect1.width + rect2.width\n  )\n}\n","import Viewport from './Viewport'\nimport defaultConfig from './options'\nimport { deepMerge } from './utils/util'\nimport { createElement } from './utils/dom'\nimport tooltip from './tooltip'\n\nconst doc = document\n\nclass Mind {\n  // 容器\n  $container = null\n\n  // dom对象\n  $el = null\n\n  // 视图画布\n  viewport = null\n\n  constructor(el, options) {\n    this.$container = typeof el === 'string' ? doc.querySelector(el) : el\n    this.options = deepMerge(defaultConfig, options)\n    this.create()\n    this.createViewport()\n    tooltip.destroy()\n  }\n\n  // 创建组件容器\n  create() {\n    this.$el = createElement(\n      'div',\n      {\n        class: 'mind-container'\n      },\n      this.$container\n    )\n  }\n\n  // 创建画布容器\n  createViewport() {\n    this.viewport = new Viewport(this)\n  }\n\n  // 获取画布尺寸\n  getViewportSize() {\n    const { width, height } = this.options\n    return { width, height }\n  }\n\n  // 获取当前画布缩放比例\n  getZoom() {\n    return this.viewport.getZoom()\n  }\n\n  // 移除dom并注销事件\n  destroy() {\n    const parentNode = this.$el.parentNode\n    if (parentNode) {\n      parentNode.removeChild(this.$el)\n    }\n  }\n}\n\nexport default Mind\n","import tooltip from './tooltip'\nimport * as Events from './events'\nimport {\n  createElement,\n  setElementStyle,\n  addClass,\n  removeClass\n} from './utils/dom'\nimport { deepMerge } from './utils/util'\n\nconst NodeConfig = {\n  /**\n   * 节点文字\n   * @type {String}\n   */\n  name: null,\n\n  /**\n   * 自定义类名\n   * @type {String}\n   */\n  className: null,\n\n  /**\n   * 节点图标\n   * @type {String}\n   */\n  icon: null,\n\n  /**\n   * 节点超链接\n   * @type {String}\n   */\n  href: null,\n\n  /**\n   * 是否允许拖拽\n   * @type {Boolean}\n   */\n  draggable: false,\n\n  /**\n   * 鼠标移到节点上是否展示tooltip\n   * @type {Boolean}\n   */\n  showTooltip: false,\n\n  /**\n   * tooltip延迟出现的毫秒数\n   * @type {Number}\n   */\n  tooltipDelay: 500,\n\n  /**\n   * 返回的html片段作为tooltip内容展示\n   * @type {Function}\n   */\n  tooltipFormat: node => {\n    return node.config.name\n  }\n}\n\nclass Node {\n  constructor(config) {\n    this.config = deepMerge(NodeConfig, config)\n    this.init()\n    this.initEvents()\n  }\n\n  init() {\n    const { name, className, icon, href, draggable } = this.config\n    let nodeClassName = 'mind-node'\n    nodeClassName += className ? ' ' + className : ''\n    nodeClassName += draggable ? ' draggable' : ''\n\n    const $el = createElement('div', { class: nodeClassName })\n    let temp = ''\n\n    if (icon) {\n      temp += `<i class=\"${icon}\"></i>`\n    }\n    temp += `<span class=\"mind-node-inner\">${name}</span>`\n    if (href) {\n      temp += `<a href=\"${href}\" class=\"mind-link iconfont icon-link\" target=\"_blank\"></a>`\n    }\n    $el.innerHTML = temp\n    this.$el = $el\n  }\n\n  initEvents() {\n    Events.on(this.$el, 'mouseenter.nodehover', this.onMouseEnter.bind(this))\n    Events.on(this.$el, 'mouseleave.nodehover', this.onMouseLeave.bind(this))\n  }\n\n  render(container, position) {\n    this.setPosition(position)\n    container.appendChild(this.$el)\n  }\n\n  /**\n   * 鼠标移入节点\n   */\n  onMouseEnter() {\n    const { showTooltip, tooltipFormat, tooltipDelay } = this.config\n\n    if (!showTooltip || !tooltipFormat || this.isDragging) return\n\n    const content = tooltipFormat(this)\n\n    if (content) {\n      const { width, left, top } = this.$el.getBoundingClientRect()\n      tooltip.setContent(content)\n      tooltip.setPosition(left + width / 2, top)\n      tooltip.show(tooltipDelay)\n    }\n  }\n\n  /**\n   * 鼠标移出节点\n   */\n  onMouseLeave() {\n    tooltip.hide()\n  }\n\n  /**\n   * 获取节点位置尺寸信息\n   */\n  getBoundRect() {\n    return this.$el.getBoundingClientRect()\n  }\n\n  /**\n   * 设置节点位置\n   * @param {Object} param 包含定位的left和top属性\n   */\n  setPosition({ left, top }) {\n    setElementStyle(this.$el, { left, top })\n  }\n\n  setStyle(style) {\n    setElementStyle(this.$el, style)\n  }\n\n  /**\n   * 更新节点的拖动状态\n   * @param {Boolean} isDragging\n   */\n  setDrag(isDragging) {\n    this.isDragging = isDragging\n\n    if (isDragging) {\n      tooltip.hide()\n    }\n  }\n\n  /**\n   * 获取节点的定位\n   */\n  getPosition() {\n    return {\n      left: parseInt(this.$el.style.left, 10),\n      top: parseInt(this.$el.style.top, 10)\n    }\n  }\n\n  /**\n   * 更改节点类名\n   * @param {String} addClassName 添加的类名\n   * @param {String} removeClassName 移除的类名\n   */\n  changeClass(addClassName, removeClassName) {\n    addClass(this.$el, addClassName)\n    removeClass(this.$el, removeClassName)\n  }\n\n  /** 移除节点和事件绑定 */\n  destroy() {\n    const $parent = this.$el.parentNode\n\n    Events.off(this.$el, 'mouseenter.nodehover')\n    Events.off(this.$el, 'mouseleave.nodehover')\n\n    $parent && $parent.removeChild(this.$el)\n  }\n}\n\nexport default Node\n","import { createElement } from '../utils/dom'\n\nclass TopicLine {\n  // 路径的dom对象\n  $el = null\n\n  options = {\n    // 起点位置\n    start: [],\n    // 终点位置\n    end: [],\n    // 弯曲半径\n    radius: 4,\n    // 线条颜色\n    stroke: '#43a9ff',\n    // 线条粗细\n    strokeWidth: 1,\n    // 线条填充色\n    fill: 'none',\n    // 路径终结类型\n    strokeLinecap: 'square'\n  }\n\n  constructor(options) {\n    Object.assign(this.options, options)\n    this.create()\n  }\n\n  // 创建曲线\n  create() {\n    const {\n      start,\n      end,\n      radius,\n      stroke,\n      strokeWidth,\n      strokeLinecap,\n      fill\n    } = this.options\n\n    const startX = start[0]\n    const startY = start[1]\n    const endX = end[0]\n    const endY = end[1]\n\n    let pathD\n\n    if (Math.abs(startY - endY) < radius) {\n      pathD = ['M', startX, startY, 'L', endX, endY]\n    } else {\n      let sweepFlag =\n        (endX > startX && endY < startY) || (startX > endX && startY < endY)\n          ? 1\n          : 0\n      const turnX1 = (startX + endX) / 2\n      const turnX2 =\n        endX > startX\n          ? Math.min(turnX1 + radius, endX)\n          : Math.max(turnX1 - radius, endX)\n      const turnY1 =\n        endY > startY\n          ? Math.max(startY, endY - radius)\n          : Math.min(startY, endY + radius)\n\n      pathD = [\n        'M',\n        startX,\n        startY,\n        'L',\n        turnX1,\n        startY,\n        'L',\n        turnX1,\n        turnY1,\n        'A',\n        radius,\n        radius,\n        0,\n        0,\n        sweepFlag,\n        turnX2,\n        endY,\n        'L',\n        endX,\n        endY\n      ]\n    }\n\n    this.$el = createElement('path', {\n      d: pathD.join(' '),\n      stroke,\n      'stroke-width': strokeWidth,\n      'stroke-linecap': strokeLinecap,\n      fill\n    })\n  }\n}\n\nexport default TopicLine\n","import Node from './Node'\nimport TopicLine from './connections/topicLine'\nimport {\n  createElement,\n  setElementStyle,\n  addClass,\n  removeClass\n} from './utils/dom'\n\nclass Topic {\n  // 配置项\n  options = {\n    // 根实例\n    mind: null,\n    // 父主题\n    parent: null,\n    // root, left, right\n    structure: 'right',\n    // 数据\n    data: null\n  }\n\n  // 根实例\n  mind = null\n\n  // dom对象\n  $el = null\n\n  $topicBox = null\n\n  $expandBox = null\n\n  $pathBox = null\n\n  // 路径组\n  $pathGroup = null\n\n  // 当前节点\n  node = null\n\n  // 父主题\n  parent = null\n\n  // 子主题\n  children = []\n\n  // 当前节点是否展开\n  isExpand = true\n\n  constructor(options) {\n    Object.assign(this.options, options)\n\n    this.parent = this.options.parent\n    this.mind = this.options.mind\n\n    this.isExpand = options.data.expand !== false\n\n    this.create()\n  }\n\n  render() {\n    const { children } = this\n\n    if (children.length) {\n      this.isExpand && this.drawLines()\n      children.forEach(child => {\n        child.render()\n      })\n    }\n  }\n\n  // 创建\n  create() {\n    const { data, structure } = this.options\n\n    this.$el = createElement('div', {\n      class: `mind-topic-container mind-topic-${structure} ${\n        this.isExpand ? 'is-expand' : ''\n      }`\n    })\n\n    this.createNode()\n\n    if (data.children && data.children.length) {\n      this.createChildren()\n      this.createPaths()\n      this.createExpand()\n    }\n  }\n\n  // 创建主题节点\n  createNode() {\n    const { parent, options } = this\n    let nodeType = 'normal'\n\n    const $topicBox = (this.$topicBox = createElement(\n      'div',\n      {\n        class: 'mind-topic-box'\n      },\n      this.$el\n    ))\n\n    if (options.structure === 'root') {\n      nodeType = 'root'\n    } else if (parent && parent.options.structure === 'root') {\n      nodeType = 'branch'\n    }\n\n    this.node = new Node(this.getNodeConfig(options.data))\n\n    $topicBox.appendChild(this.node.$el)\n  }\n\n  // 创建伸缩句柄\n  createExpand() {\n    this.$expandBox = createElement(\n      'span',\n      {\n        class: 'mind-expand-box'\n      },\n      this.$topicBox\n    )\n  }\n\n  // 创建子主题\n  createChildren() {\n    const { data, structure } = this.options\n    const { children } = data\n    const $child = createElement('div', { class: 'mind-topic-children' })\n\n    this.children = children.map(child => {\n      const childTopic = new Topic({\n        mind: this.mind,\n        parent: this,\n        structure,\n        data: child\n      })\n      $child.appendChild(childTopic.$el)\n\n      return childTopic\n    })\n\n    if (structure === 'left') {\n      this.$el.insertBefore($child, this.$topicBox)\n    } else {\n      this.$el.appendChild($child)\n    }\n  }\n\n  // 创建路径\n  createPaths() {\n    const svg = (this.$pathBox = createElement(\n      'svg',\n      {\n        width: '100%',\n        height: '100%',\n        xmlns: 'http://www.w3.org/2000/svg',\n        'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n      },\n      this.$el\n    ))\n\n    this.$pathGroup = createElement('g', null, svg)\n  }\n\n  getNodeConfig(nodeData) {\n    const {\n      draggable,\n      showTooltip,\n      tooltipFormat,\n      tooltipDelay\n    } = this.options.mind.options\n\n    return Object.assign(\n      {\n        draggable,\n        showTooltip,\n        tooltipFormat,\n        tooltipDelay\n      },\n      nodeData\n    )\n  }\n\n  // 设置定位\n  setPosition(left, top) {\n    setElementStyle(this.$el, {\n      left,\n      top\n    })\n  }\n\n  // 获取定位位置\n  getPosition() {\n    const left = parseInt(this.$el.style.left, 10)\n    const top = parseInt(this.$el.style.top, 10)\n\n    return {\n      left,\n      top\n    }\n  }\n\n  // 获取尺寸\n  getSize() {\n    return this.$el.getBoundingClientRect()\n  }\n\n  // 绘制连接线\n  drawLines() {\n    const zoom = this.mind.getZoom()\n    const { structure } = this.options\n    const topicRect = this.getSize()\n    const startPos = this.getLineStartPos()\n\n    this.children.forEach(child => {\n      const subTopicRect = child.getSize()\n      const endPosY =\n        (subTopicRect.top - topicRect.top + subTopicRect.height / 2) / zoom\n      const endPosX =\n        (structure === 'left'\n          ? subTopicRect.right - topicRect.left\n          : subTopicRect.left - topicRect.left) / zoom\n      const topicLine = new TopicLine({\n        start: [startPos.left / zoom, startPos.top / zoom],\n        end: [endPosX, endPosY]\n      })\n\n      this.$pathGroup.appendChild(topicLine.$el)\n    })\n  }\n\n  // 更新当前节点的连接路径\n  updateConnections() {\n    if (!this.children.length) return\n\n    this.$pathGroup.innerHTML = ''\n\n    if (this.isExpand) {\n      this.drawLines()\n    }\n  }\n\n  // 更新父节点的连接关系，并层层往上更新\n  updateParentConnections() {\n    let parentTopic = this.parent\n\n    if (parentTopic) {\n      parentTopic.updateConnections()\n      parentTopic.updateParentConnections()\n    }\n  }\n\n  // 更新子节点的连接关系，并层层往下更新\n  updateChildConnections() {\n    this.children.forEach(child => {\n      child.updateConnections()\n      child.updateChildConnections()\n    })\n  }\n\n  // 获取连线起始位置\n  getLineStartPos() {\n    const { structure } = this.options\n    const topicRect = this.getSize()\n    const nodeRect = this.node.getBoundRect()\n    const top = nodeRect.top - topicRect.top + nodeRect.height / 2\n    const left =\n      structure === 'left'\n        ? nodeRect.left - topicRect.left\n        : nodeRect.left - topicRect.left + nodeRect.width\n\n    return {\n      left,\n      top\n    }\n  }\n\n  triggerExpand() {\n    this.isExpand = !this.isExpand\n\n    if (this.isExpand) {\n      addClass(this.$el, 'is-expand')\n    } else {\n      removeClass(this.$el, 'is-expand')\n    }\n\n    const rootTopic = this.getRootTopic()\n    rootTopic.resetPosToCenter()\n\n    this.updateParentConnections()\n    this.updateConnections()\n    this.updateChildConnections()\n  }\n\n  // 获取根主题\n  getRootTopic() {\n    let topic = this\n\n    while (topic.parent) {\n      topic = topic.parent\n    }\n\n    return topic\n  }\n}\n\nexport default Topic\n","import { createElement } from '../utils/dom'\n\nclass Curve {\n  // 路径的dom对象\n  $el = null\n\n  options = {\n    // gradient, quadratic, cubic\n    type: 'quadratic',\n    // 起点位置\n    start: [],\n    // 终点位置\n    end: [],\n    // 渐变线起点宽度\n    quadraticWidth: 10,\n    // 线条颜色\n    stroke: '#43a9ff',\n    // 线条粗细\n    strokeWidth: 2,\n    // 线条填充色\n    fill: 'none',\n    // 路径终结类型\n    strokeLinecap: 'square'\n  }\n\n  constructor(options) {\n    Object.assign(this.options, options)\n    this.create()\n  }\n\n  // 创建曲线\n  create() {\n    const { type } = this.options\n\n    switch (type) {\n      case 'gradient':\n        this.createGradientCurve()\n        break\n    }\n  }\n\n  // 创建宽度渐变的二次贝塞尔曲线\n  createGradientCurve() {\n    const {\n      start,\n      end,\n      quadraticWidth,\n      stroke,\n      strokeWidth,\n      strokeLinecap,\n      fill\n    } = this.options\n\n    const startX = start[0]\n    const startY = start[1]\n    const endX = end[0]\n    const endY = end[1]\n\n    let pathD\n\n    if (Math.abs(endY - startY) < quadraticWidth) {\n      const tan = Math.atan((endY - startY) / (endX - startX))\n      const offsetX = (Math.sin(tan) * quadraticWidth) / 2\n      const offsetY = (Math.cos(tan) * quadraticWidth) / 2\n      const realStartX1 = startX + offsetX\n      const realStartY1 = startY - offsetY\n      const realStartX2 = startX - offsetX\n      const realStartY2 = startY + offsetY\n\n      pathD = [\n        'M',\n        realStartX1,\n        realStartY1,\n        'L',\n        endX,\n        endY,\n        'L',\n        realStartX2,\n        realStartY2,\n        'L',\n        realStartX1,\n        realStartY1\n      ]\n    } else {\n      const handleX = (endX - startX) * 0.2 + startX\n      const handleY = endY\n      const handleOffestX =\n        (endX > startX && endY > startY) || (endX < startX && endY < startY)\n          ? -quadraticWidth\n          : quadraticWidth\n      const tan = Math.atan((handleY - startY) / (handleX - startX))\n      const offsetX = (Math.sin(tan) * quadraticWidth) / 2\n      const offsetY = (Math.cos(tan) * quadraticWidth) / 2\n      const realStartX1 = startX + offsetX\n      const realStartY1 = startY - offsetY\n      const realStartX2 = startX - offsetX\n      const realStartY2 = startY + offsetY\n\n      pathD = [\n        'M',\n        realStartX1,\n        realStartY1,\n        'C',\n        realStartX1,\n        realStartY1,\n        handleX,\n        handleY,\n        endX,\n        endY,\n        'C',\n        handleX + handleOffestX,\n        handleY,\n        realStartX2,\n        realStartY2,\n        realStartX2,\n        realStartY2,\n        'L',\n        realStartX1,\n        realStartY1,\n        'Z'\n      ]\n    }\n\n    this.$el = createElement('path', {\n      d: pathD.join(' '),\n      stroke,\n      'stroke-width': strokeWidth,\n      'stroke-linecap': strokeLinecap,\n      fill\n    })\n  }\n}\n\nexport default Curve\n","import Topic from './topic'\nimport Curve from './connections/curve'\nimport { createElement, setElementStyle } from './utils/dom'\n\nclass RootTopic extends Topic {\n  // 中心点横坐标位置\n  centerPosX = null\n\n  // 中心点纵坐标位置\n  centerPosY = null\n\n  constructor(options) {\n    super(options)\n  }\n\n  createChildren() {\n    const { children, leftChildren } = this.options.data\n    const $child = createElement('div', { class: 'mind-topic-children' })\n    const rightChildrenTopic = this.createChildrenByStructure(\n      children,\n      'right',\n      $child\n    )\n    const leftChildrenTopic = this.createChildrenByStructure(\n      leftChildren,\n      'left',\n      $child\n    )\n\n    this.children = rightChildrenTopic.concat(leftChildrenTopic)\n    this.$el.appendChild($child)\n  }\n\n  createChildrenByStructure(children, structure, $child) {\n    if (!children) return []\n\n    return children.map(child => {\n      const childTopic = new Topic({\n        mind: this.mind,\n        parent: this,\n        structure,\n        data: child\n      })\n      $child.appendChild(childTopic.$el)\n\n      return childTopic\n    })\n  }\n\n  render() {\n    this.mind.viewport.$view.appendChild(this.$el)\n    this.resetPosToCenter()\n    this.drawLines()\n\n    this.children.forEach(child => {\n      child.render()\n    })\n  }\n\n  // 将结构定位到画布中心\n  resetPosToCenter() {\n    this.resetNodePos()\n    this.resetChildTopicPos('left')\n    this.resetChildTopicPos('right')\n  }\n\n  // 定位根节点\n  resetNodePos() {\n    const zoom = this.mind.getZoom()\n    const { width, height } = this.node.getBoundRect()\n    const { width: vw, height: vh } = this.mind.getViewportSize()\n    const left = (vw - width / zoom) / 2\n    const top = (vh - height / zoom) / 2\n\n    this.centerPosX = vw / 2\n    this.centerPosY = vh / 2\n\n    setElementStyle(this.$topicBox, {\n      left,\n      top\n    })\n  }\n\n  // 定位分支主题\n  resetChildTopicPos(structure) {\n    const zoom = this.mind.getZoom()\n    const { width: nodeW } = this.node.getBoundRect()\n    const { rootMargin, branchMargin } = this.mind.options\n    const topics = this.children.filter(\n      child => child.options.structure === structure\n    )\n    const topicSizes = topics.map(child => child.getSize())\n\n    let totalHeight = topicSizes.reduce((total, current) => {\n      return total + current.height / zoom\n    }, 0)\n\n    totalHeight += (topics.length - 1) * branchMargin\n\n    let posTop = this.centerPosY - totalHeight / 2\n\n    topicSizes.forEach((size, index) => {\n      const topic = topics[index]\n      const posLeft =\n        structure === 'left'\n          ? this.centerPosX - nodeW / zoom / 2 - rootMargin - size.width / zoom\n          : this.centerPosX + nodeW / zoom / 2 + rootMargin\n\n      topic.setPosition(posLeft, posTop)\n      posTop += size.height / zoom + branchMargin\n    })\n  }\n\n  drawLines() {\n    const zoom = this.mind.getZoom()\n    const { centerPosX, centerPosY } = this\n    const { lineColor } = this.mind.options\n\n    this.children.forEach((child, index) => {\n      const { width, height } = child.getSize()\n      const { left, top } = child.getPosition()\n      const endX =\n        child.options.structure === 'left' ? left + width / zoom : left\n      const endY = top + height / zoom / 2\n\n      const curve = new Curve({\n        type: 'gradient',\n        start: [centerPosX, centerPosY],\n        end: [endX, endY],\n        stroke: lineColor[index],\n        fill: lineColor[index]\n      })\n\n      this.$pathGroup.appendChild(curve.$el)\n    })\n  }\n}\n\nexport default RootTopic\n","import {\n  createElement,\n  setElementStyle,\n  addClass,\n  removeClass\n} from './utils/dom'\n\nconst body = document.body\nlet positionX = 0\nlet positionY = 0\nlet delayTimeout\n\nconst tooltip = {\n  $el: null,\n\n  init() {\n    if (tooltip.$el) return\n\n    tooltip.$el = createElement('div', {\n      class: 'mind-tooltip'\n    })\n\n    body.appendChild(tooltip.$el)\n  },\n\n  resetPosition() {\n    if (!tooltip.$el) return\n\n    const { width, height } = tooltip.$el.getBoundingClientRect()\n    const arrowHeight = 4\n    setElementStyle(tooltip.$el, {\n      left: positionX - width / 2,\n      top: positionY - height - arrowHeight\n    })\n  },\n\n  show(delay) {\n    if (!tooltip.$el) {\n      tooltip.init()\n    }\n\n    if (delay) {\n      delayTimeout = setTimeout(() => {\n        addClass(tooltip.$el, 'show')\n        tooltip.resetPosition()\n      }, delay)\n    } else {\n      addClass(tooltip.$el, 'show')\n      tooltip.resetPosition()\n    }\n  },\n\n  hide() {\n    if (!tooltip.$el) return\n\n    if (delayTimeout) {\n      clearTimeout(delayTimeout)\n      delayTimeout = null\n    }\n\n    removeClass(tooltip.$el, 'show')\n    tooltip.$el.style.left = ''\n    tooltip.$el.style.top = ''\n  },\n\n  setContent(content) {\n    if (!tooltip.$el) {\n      tooltip.init()\n    }\n\n    tooltip.$el.innerHTML = content\n  },\n\n  setPosition(left, top) {\n    positionX = left\n    positionY = top\n  },\n\n  destroy() {\n    tooltip.$el = null\n\n    const $tooltip = document.body.querySelector('.mind-tooltip')\n    if (!$tooltip) return\n    const parentNode = $tooltip.parentNode\n    parentNode.removeChild($tooltip)\n  }\n}\n\nexport default tooltip\n","import Mind from './Mind'\nimport RootTopic from './RootTopic'\nimport Gator from './EventDeletage'\nimport tooltip from './Tooltip'\nimport { hasClass } from './utils/dom'\nimport { treeToArray } from './utils/util'\n\nconst doc = document\n\nclass OrgMind extends Mind {\n  // 根节点\n  rootTopic = null\n\n  // 所有节点列表\n  topics = []\n\n  constructor(el, options) {\n    super(el, options)\n\n    this.initEvents()\n    this.render()\n  }\n\n  // 开始渲染图形\n  render() {\n    this.rootTopic = new RootTopic({\n      mind: this,\n      structure: 'root',\n      data: this.options.data\n    })\n\n    this.rootTopic.render()\n    this.topics = treeToArray(this.rootTopic)\n  }\n\n  // 初始化事件\n  initEvents() {\n    Gator(doc).on(\n      'click.expand',\n      '.mind-expand-box',\n      this.triggerTopicExpand.bind(this)\n    )\n\n    Gator(doc).on('click.node', '.mind-node', this.onNodeClick.bind(this))\n  }\n\n  // 节点伸缩切换\n  triggerTopicExpand(e) {\n    const $topic = e.target.parentNode.parentNode\n    const topic = this.getTopicByElement($topic)\n    topic && topic.triggerExpand()\n  }\n\n  // 节点点击\n  onNodeClick(e) {\n    let $topic = e.target\n\n    while (!hasClass($topic, 'mind-topic-container')) {\n      $topic = $topic.parentNode\n    }\n\n    const topic = this.getTopicByElement($topic)\n\n    if (topic && this.options.onNodeClick) {\n      this.options.onNodeClick(topic.options.data, topic.node)\n    }\n  }\n\n  // 通过dom获取主题实例\n  getTopicByElement(el) {\n    return this.topics.find(topic => topic.$el === el)\n  }\n\n  // 移除dom并注销事件\n  destroy() {\n    this.$container.removeChild(this.$el)\n    Gator(doc).off('click.expand')\n    Gator(doc).off('click.node')\n    tooltip.destroy()\n  }\n}\n\nexport default OrgMind\n","import { createElement } from '../utils/dom'\n\nclass Connection {\n  // 路径dom\n  $path = null\n\n  // 起点\n  from = null\n\n  // 终点\n  to = null\n\n  options = {\n    type: 'straight',\n    stroke: '#43a9ff',\n    strokeWidth: 1,\n    strokeLinecap: 'square',\n    fill: 'none',\n    direction: 'horizontal'\n  }\n\n  constructor(from, to, options) {\n    this.from = from\n    this.to = to\n    Object.assign(this.options, options)\n    this.direction = this.options.direction\n    this.create()\n  }\n\n  create() {\n    const { stroke, strokeWidth, strokeLinecap, fill } = this.options\n\n    const $path = (this.$path = createElement('path', {\n      stroke,\n      'stroke-width': strokeWidth,\n      'stroke-linecap': strokeLinecap,\n      fill\n    }))\n\n    if (this.getPath) {\n      $path.setAttribute('d', this.getPath())\n    }\n  }\n}\n\nexport default Connection\n","import Connection from './connection'\nimport { createElement } from '../utils/dom'\n\nclass LinkLine extends Connection {\n  constructor(from, to, options) {\n    super(from, to, options)\n  }\n\n  create() {\n    const {\n      stroke,\n      strokeWidth,\n      strokeLinecap,\n      strokeLinejoin,\n      fill\n    } = this.options\n    const pathStyle = {\n      stroke,\n      'stroke-width': strokeWidth,\n      'stroke-linecap': strokeLinecap,\n      'stroke-linejoin': strokeLinejoin,\n      fill\n    }\n    const $path = (this.$path = createElement('g'))\n    this.$line = createElement('path', pathStyle, $path)\n    this.$arrow = createElement('path', pathStyle, $path)\n\n    this.$line.setAttribute('d', this.getPath())\n    this.$arrow.setAttribute('d', this.getArrowPath())\n  }\n\n  update({ from, to, direction }) {\n    this.from = from\n    this.to = to\n    this.direction = direction\n\n    this.$line.setAttribute('d', this.getPath())\n    this.$arrow.setAttribute('d', this.getArrowPath())\n  }\n\n  clear() {\n    this.$line.setAttribute('d', '')\n    this.$arrow.setAttribute('d', '')\n  }\n\n  getPath() {\n    const fromX = this.from[0]\n    const fromY = this.from[1]\n    const toX = this.to[0]\n    const toY = this.to[1]\n\n    if (this.direction === 'horizontal') {\n      const handleOffsetX = Math.abs(fromX - toX) * 0.4\n      const handlePointX1 =\n        fromX > toX ? fromX - handleOffsetX : fromX + handleOffsetX\n      const handlePointX2 =\n        fromX > toX ? toX + handleOffsetX : toX - handleOffsetX\n\n      return [\n        'M',\n        fromX,\n        fromY,\n        'C',\n        handlePointX1,\n        fromY,\n        handlePointX2,\n        toY,\n        fromX > toX ? toX + 10 : toX - 10,\n        toY,\n        'L',\n        toX,\n        toY\n      ].join(' ')\n    } else {\n      const handleOffset = Math.abs(fromY - toY) * 0.4\n      const handlePointY1 =\n        fromY > toY ? fromY - handleOffset : fromY + handleOffset\n      const handlePointY2 =\n        fromY > toY ? toY + handleOffset : toY - handleOffset\n\n      return [\n        'M',\n        fromX,\n        fromY,\n        'C',\n        fromX,\n        handlePointY1,\n        toX,\n        handlePointY2,\n        toX,\n        fromY > toY ? toY + 10 : toY - 10,\n        'L',\n        toX,\n        toY\n      ].join(' ')\n    }\n  }\n\n  getArrowPath() {\n    const fromX = this.from[0]\n    const fromY = this.from[1]\n    const toX = this.to[0]\n    const toY = this.to[1]\n\n    let vertex1\n    let vertex2\n\n    if (this.direction === 'horizontal') {\n      if (fromX > toX) {\n        vertex1 = [toX + 6, toY - 4]\n        vertex2 = [toX + 6, toY + 4]\n      } else {\n        vertex1 = [toX - 6, toY - 4]\n        vertex2 = [toX - 6, toY + 4]\n      }\n    } else {\n      if (fromY > toY) {\n        vertex1 = [toX - 4, toY + 6]\n        vertex2 = [toX + 4, toY + 6]\n      } else {\n        vertex1 = [toX - 4, toY - 6]\n        vertex2 = [toX + 4, toY - 6]\n      }\n    }\n\n    return [\n      'M',\n      toX,\n      toY,\n      'L',\n      vertex1[0],\n      vertex1[1],\n      'M',\n      toX,\n      toY,\n      'L',\n      vertex2[0],\n      vertex2[1],\n      'Z'\n    ].join(' ')\n  }\n}\n\nexport default LinkLine\n","import Mind from './Mind'\nimport Node from './Node'\nimport LinkLine from './connections/LinkLine'\nimport Gator from './EventDeletage'\nimport {\n  createElement,\n  addClass,\n  removeClass,\n  hasClass,\n  setElementStyle\n} from './utils/dom'\nimport {\n  isRectOverlap,\n  isRectVertOverlap,\n  isRectHoriOverlap\n} from './utils/util'\n\nconst doc = document\n\n/**\n * 获取两个矩形连线的方向\n * @param {Object} fromBound\n * @param {Object} toBound\n */\nconst getLinkDirection = (fromBound, toBound) => {\n  const isVertOverlap = isRectVertOverlap(fromBound, toBound)\n  const isHoriOverlap = isRectHoriOverlap(fromBound, toBound)\n\n  if (isVertOverlap && isHoriOverlap) return\n\n  if (isVertOverlap) {\n    return 'horizontal'\n  } else if (isHoriOverlap) {\n    return 'vertical'\n  } else {\n    const vertInstance = Math.min(\n      Math.abs(fromBound.top - toBound.bottom),\n      Math.abs(fromBound.bottom - toBound.top)\n    )\n    const horiInstance = Math.min(\n      Math.abs(fromBound.left - toBound.right),\n      Math.abs(fromBound.right - toBound.left)\n    )\n\n    return vertInstance > horiInstance ? 'vertical' : 'horizontal'\n  }\n}\n\nclass FlowMind extends Mind {\n  // 节点列表\n  nodes = []\n\n  nodeTree = null\n\n  $pathBox = null\n\n  $pathGroup = null\n\n  connections = []\n\n  constructor(el, options) {\n    super(el, options)\n\n    this.$viewport = this.viewport.$view\n\n    addClass(this.$el, 'mind-flow')\n\n    this.nodeTree = this.createNode(options.data)\n\n    this.nodes.forEach(({ node }) => {\n      this.$viewport.appendChild(node.$el)\n    })\n\n    this.createPaths()\n    this.createLabels()\n\n    this.setPosition()\n\n    this.createConnections(this.nodeTree)\n\n    if (!this.options.showConnectionLabel) {\n      this.hideLabel()\n    }\n\n    this.initEvents()\n  }\n\n  // 创建节点\n  createNode(nodeData, axis = 0, key, node) {\n    if (!nodeData) return\n\n    if (nodeData instanceof Array) {\n      return nodeData.map(data => {\n        const parents = this.createNode(data.parents, axis - 1)\n        const children = this.createNode(data.children, axis + 1)\n\n        const node = {\n          node: new Node(this.getNodeConfig(data)),\n          axis,\n          parents,\n          children\n        }\n\n        if (parents && parents.length) {\n          node.leaf = parents.reduce((total, parent) => total + parent.leaf, 0)\n        } else if (children && children.length) {\n          node.leaf = children.reduce((total, child) => total + child.leaf, 0)\n        } else {\n          node.leaf = 1\n        }\n\n        this.nodes.push(node)\n\n        return node\n      })\n    } else {\n      const node = {\n        node: new Node(this.getNodeConfig(nodeData)),\n        axis,\n        parents: this.createNode(nodeData.parents, axis - 1, 'children', node),\n        children: this.createNode(nodeData.children, axis + 1, 'parents', node)\n      }\n\n      this.nodes.push(node)\n      return node\n    }\n  }\n\n  getNodeConfig(nodeData) {\n    const { draggable, showTooltip, tooltipFormat, tooltipDelay } = this.options\n\n    return Object.assign(\n      {\n        draggable,\n        showTooltip,\n        tooltipFormat,\n        tooltipDelay\n      },\n      nodeData\n    )\n  }\n\n  getChildNode(node) {\n    console.log(this.nodeTree)\n    const { id } = node\n  }\n\n  // 创建路径\n  createPaths() {\n    const svg = (this.$pathBox = createElement(\n      'svg',\n      {\n        width: '100%',\n        height: '100%',\n        xmlns: 'http://www.w3.org/2000/svg',\n        'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n      },\n      this.$viewport\n    ))\n\n    this.$pathGroup = createElement('g', null, svg)\n  }\n\n  createLabels() {\n    this.$labelContainer = createElement(\n      'div',\n      {\n        class: 'mind-label-container'\n      },\n      this.$viewport\n    )\n  }\n\n  // 设置节点的定位\n  setPosition() {\n    const { width: vw, height: vh } = this.options\n    const rootNode = this.nodeTree.node\n    const { width: rootW, height: rootH } = rootNode.getBoundRect()\n    const centerPosX = vw / 2\n    const centerPosY = vh / 2\n\n    rootNode.setPosition({\n      left: centerPosX - rootW / 2,\n      top: centerPosY - rootH / 2\n    })\n\n    this.setNodePosition(this.nodeTree.parents, 'left', centerPosY)\n    this.setNodePosition(this.nodeTree.children, 'right', centerPosY)\n  }\n\n  // 计算并设置各个节点的定位\n  setNodePosition(nodeObjList, structure, centerPosY) {\n    const {\n      width: vw,\n      flowRootMargin,\n      flowNodeMarginW,\n      flowNodeMarginH\n    } = this.options\n\n    if (!nodeObjList || !nodeObjList.length) return\n\n    const centerPosX = vw / 2\n\n    const totalLeaf = nodeObjList.reduce(\n      (total, nodeObj) => nodeObj.leaf + total,\n      0\n    )\n\n    let leafs = 0\n\n    nodeObjList.forEach(nodeObj => {\n      const { width: rootW } = this.nodeTree.node.getBoundRect()\n      const { width, height } = nodeObj.node.getBoundRect()\n      const subNodeObjList =\n        structure === 'left' ? nodeObj.parents : nodeObj.children\n\n      let posX\n      let posY =\n        centerPosY -\n        (totalLeaf / 2 - nodeObj.leaf / 2 - leafs) * flowNodeMarginH -\n        height / 2\n\n      // console.log(nodeObj)\n\n      if (structure === 'left') {\n        posX =\n          centerPosX -\n          ((Math.abs(nodeObj.axis) - 1) * flowNodeMarginW +\n            flowRootMargin +\n            width / 2) -\n          rootW / 2\n      } else {\n        posX =\n          centerPosX +\n          ((Math.abs(nodeObj.axis) - 1) * flowNodeMarginW +\n            flowRootMargin -\n            width / 2) +\n          rootW / 2\n      }\n\n      nodeObj.node.setPosition({\n        left: posX,\n        top: posY\n      })\n\n      leafs += nodeObj.leaf\n\n      this.setNodePosition(subNodeObjList, structure, posY + height / 2)\n    })\n  }\n\n  // 创建连接关系\n  createConnections(nodeObj) {\n    const { children, parents } = nodeObj\n    const nodeBound = this.getNodeBound(nodeObj)\n\n    children &&\n      children.forEach(subNodeObj => {\n        const { connectionLabel } = subNodeObj.node.config\n        const subNodeBound = this.getNodeBound(subNodeObj)\n        const { line, labelEl } = this.drawLink(\n          nodeBound,\n          subNodeBound,\n          connectionLabel\n        )\n        this.connections.push({\n          fromNode: nodeObj.node,\n          toNode: subNodeObj.node,\n          line,\n          labelEl\n        })\n        this.createConnections(subNodeObj)\n      })\n    parents &&\n      parents.forEach(subNodeObj => {\n        const { connectionLabel } = nodeObj.node.config\n        const subNodeBound = this.getNodeBound(subNodeObj)\n        const { line, labelEl } = this.drawLink(\n          subNodeBound,\n          nodeBound,\n          connectionLabel\n        )\n        this.connections.push({\n          fromNode: subNodeObj.node,\n          toNode: nodeObj.node,\n          line,\n          labelEl\n        })\n        this.createConnections(subNodeObj)\n      })\n  }\n\n  // 绘制箭头连线\n  drawLink(parentBound, childBound, label) {\n    let labelEl\n    const { linkLineStyle } = this.options\n    const from = [\n      parentBound.left + parentBound.width,\n      parentBound.top + parentBound.height / 2\n    ]\n    const to = [childBound.left, childBound.top + childBound.height / 2]\n\n    const line = new LinkLine(from, to, linkLineStyle)\n    this.$pathGroup.appendChild(line.$path)\n\n    if (label) {\n      labelEl = this.drawLabel(parentBound, childBound, label)\n    }\n\n    return {\n      line,\n      labelEl\n    }\n  }\n\n  drawLabel(parentBound, childBound, label) {\n    const posX = (parentBound.left + parentBound.width + childBound.left) / 2\n    const posY =\n      (parentBound.top +\n        parentBound.height / 2 +\n        childBound.top +\n        childBound.height / 2) /\n      2\n    const $label = createElement(\n      'div',\n      {\n        class: 'mind-label'\n      },\n      this.$labelContainer\n    )\n    $label.innerText = label\n\n    const { width, height } = $label.getBoundingClientRect()\n\n    setElementStyle($label, {\n      left: posX - width / 2,\n      top: posY - height / 2\n    })\n\n    return $label\n  }\n\n  updateLink(node) {\n    const connections = this.connections.filter(({ fromNode, toNode }) => {\n      return fromNode === node || toNode === node\n    })\n\n    connections.forEach(connection => {\n      const { fromNode, toNode, line, labelEl } = connection\n      const fromBoundRect = this.getNodeBound(fromNode)\n      const toBoundRect = this.getNodeBound(toNode)\n      const {\n        left: fromLeft,\n        right: fromRight,\n        top: fromTop,\n        bottom: fromBottom,\n        width: fromWidth,\n        height: fromHeight\n      } = fromBoundRect\n      const {\n        left: toLeft,\n        right: toRight,\n        top: toTop,\n        bottom: toBottom,\n        width: toWidth,\n        height: toHeight\n      } = toBoundRect\n\n      const direction = getLinkDirection(fromBoundRect, toBoundRect)\n      let from\n      let to\n\n      if (!direction) {\n        line.clear()\n        addClass(labelEl, 'mind-hidden')\n        return\n      }\n\n      if (direction === 'horizontal') {\n        from =\n          fromLeft > toRight\n            ? [fromLeft, fromTop + fromHeight / 2]\n            : [fromRight, fromTop + fromHeight / 2]\n        to =\n          fromLeft > toRight\n            ? [toRight, toTop + toHeight / 2]\n            : [toLeft, toTop + toHeight / 2]\n        line.update({\n          from,\n          to,\n          direction\n        })\n      } else {\n        from =\n          fromTop > toBottom\n            ? [fromLeft + fromWidth / 2, fromTop]\n            : [fromLeft + fromWidth / 2, fromBottom]\n        to =\n          fromTop > toBottom\n            ? [toLeft + toWidth / 2, toBottom]\n            : [toLeft + toWidth / 2, toTop]\n        line.update({\n          from,\n          to,\n          direction\n        })\n      }\n\n      labelEl && this.updateLabel(labelEl, from, to)\n    })\n  }\n\n  updateLabel(labelEl, from, to) {\n    const { width, height } = labelEl.getBoundingClientRect()\n\n    removeClass(labelEl, 'mind-hidden')\n\n    setElementStyle(labelEl, {\n      left: (from[0] + to[0] - width) / 2,\n      top: (from[1] + to[1] - height) / 2\n    })\n  }\n\n  updateAllLabelPosition() {\n    this.connections.forEach(connection => {\n      const { labelEl, line } = connection\n\n      if (!labelEl) return\n\n      this.updateLabel(labelEl, line.from, line.to)\n    })\n  }\n\n  initEvents() {\n    Gator(doc).on('click.node', '.mind-node', this.onNodeClick.bind(this))\n\n    if (this.options.draggable) {\n      Gator(this.$viewport).on(\n        'mousedown.nodedrag',\n        '.mind-node.draggable',\n        this.onNodeDragStart.bind(this)\n      )\n    }\n  }\n\n  // 节点点击事件\n  onNodeClick(e) {\n    if (this.isNodeDragging) return\n\n    const { onNodeClick } = this.options\n    const node = this.getNodeByChildElement(e.target)\n\n    if (node && onNodeClick) {\n      onNodeClick(node.config, node)\n    }\n  }\n\n  /**\n   * 节点开始拖动\n   * @param {Event} event\n   */\n  onNodeDragStart(event) {\n    event.stopPropagation()\n\n    const node = (this.draggingNode = this.getNodeByChildElement(event.target))\n    node.setDrag(true)\n    this.originNodePos = node.getPosition()\n    this.dragStartPos = {\n      x: event.pageX,\n      y: event.pageY\n    }\n\n    Gator(this.$viewport).on(\n      'mousemove.nodedrag',\n      this.onNodeDragging.bind(this)\n    )\n\n    Gator(doc).on('mouseup.nodedrag', this.onNodeDragEnd.bind(this))\n  }\n\n  /**\n   * 节点拖动过程中\n   * @param {Event} event\n   */\n  onNodeDragging(event) {\n    event.stopPropagation()\n\n    if (!this.draggingNode) return\n\n    this.isNodeDragging = true\n\n    this.draggingNode.setStyle({\n      left: this.originNodePos.left + event.pageX - this.dragStartPos.x,\n      top: this.originNodePos.top + event.pageY - this.dragStartPos.y,\n      zIndex: 1\n    })\n\n    this.updateLink(this.draggingNode)\n  }\n\n  /**\n   * 节点停止拖动\n   */\n  onNodeDragEnd() {\n    if (!this.draggingNode) return\n\n    this.draggingNode.setDrag(false)\n    this.draggingNode = null\n\n    Gator(this.$viewport).off('mousemove.nodedrag')\n    Gator(doc).off('mouseup.nodedrag')\n\n    setTimeout(() => {\n      this.isNodeDragging = false\n    })\n  }\n\n  // 获取节点位置和尺寸信息\n  getNodeBound(nodeObj) {\n    const node = nodeObj.node || nodeObj\n    const { width, height } = node.getBoundRect()\n    const left = parseInt(node.$el.style.left, 10)\n    const top = parseInt(node.$el.style.top, 10)\n\n    return {\n      width,\n      height,\n      left,\n      top,\n      right: left + width,\n      bottom: top + height\n    }\n  }\n\n  // 通过node子节点获取node实例\n  getNodeByChildElement(el) {\n    while (!hasClass(el, 'mind-node')) {\n      el = el.parentNode\n    }\n\n    return this.getNodeByElement(el)\n  }\n\n  // 根据dom获取节点\n  getNodeByElement(el) {\n    const nodeObj = this.nodes.find(({ node }) => node.$el === el)\n\n    return nodeObj && nodeObj.node\n  }\n\n  showLabel() {\n    removeClass(this.$el, 'mind-label-hide')\n    if (this.options.draggable) {\n      this.updateAllLabelPosition()\n    }\n  }\n\n  hideLabel() {\n    addClass(this.$el, 'mind-label-hide')\n  }\n}\n\nexport default FlowMind\n","import Mind from './Mind'\nimport OrgMind from './OrgMind'\nimport FlowMind from './FlowMind'\nimport options from './options'\nimport Node from './Node'\n\nMind.Org = OrgMind\nMind.Flow = FlowMind\nMind.defaults = options\nMind.Node = Node\n\nexport default Mind\n"],"names":["getListenerMap","target","create","listenerMap","getListeners","type","cleanListeners","getEventName","split","removeListeners","listeners","eventName","forEach","listener","removeEventListener","Object","keys","length","on","callback","addEventListener","push","off","index","findIndex","splice","removeListener","removeAllListeners","doc","document","attrsWithPixel","HTMLElement","setElementStyle","el","style","attr","padding","includes","svgTags","createElement","tag","attrs","parent","createElementNS","setAttribute","appendChild","hasClass","clsName","className","addClass","cls","curClass","classList","add","removeClass","classes","i","j","remove","replace","trim","Viewport","root","$container","$el","options","setStyle","moveToCenter","initEvents","class","this","$view","width","height","backgroundColor","left","top","scrollLeft","scrollTop","getBoundingClientRect","wrapW","wrapH","moveTo","Events","onDragStart","bind","event","stopPropagation","pageX","pageY","dragStartMousePosition","dragStartScroll","onDraging","onDragEnd","curScrollLeft","curScrollTop","dragingFlag","e","scale","transform","zoomMax","zoomStep","zoom","Math","min","zoomMin","max","lineColor","draggable","showConnectionLabel","showTooltip","tooltipDelay","tooltipFormat","rootMargin","branchMargin","branchShowIndex","flowNodeMarginW","flowNodeMarginH","flowRootMargin","normalLineStyle","stroke","strokeWidth","strokeLinecap","fill","linkLineStyle","strokeLinejoin","direction","onNodeClick","delayTimeout","_matcher","module","isMergeableObject","value","stringValue","prototype","toString","call","$$typeof","REACT_ELEMENT_TYPE","Symbol","for","cloneUnlessOtherwiseSpecified","clone","deepmerge","val","Array","isArray","defaultArrayMerge","source","concat","map","element","mergeObject","destination","key","customMerge","getMergeFunction","arrayMerge","sourceIsArray","targetIsArray","sourceAndTargetTypesMatch","all","array","Error","reduce","prev","next","factory","deepMerge","filter","item","destinationArray","sourceArray","body","positionX","positionY","tooltip","init","resetPosition","show","delay","setTimeout","hide","clearTimeout","setContent","content","innerHTML","setPosition","destroy","$tooltip","querySelector","parentNode","removeChild","Mind","defaultConfig","createViewport","viewport","getZoom","NodeConfig","name","icon","href","node","config","Node","nodeClassName","temp","onMouseEnter","onMouseLeave","container","position","isDragging","parseInt","addClassName","removeClassName","$parent","TopicLine","start","end","radius","assign","pathD","startX","startY","endX","endY","abs","sweepFlag","turnX1","turnX2","d","join","Topic","mind","structure","data","isExpand","expand","children","drawLines","child","render","createNode","createChildren","createPaths","createExpand","$topicBox","getNodeConfig","$expandBox","$child","childTopic","_this","insertBefore","svg","$pathBox","xmlns","$pathGroup","nodeData","topicRect","getSize","startPos","getLineStartPos","subTopicRect","endPosY","endPosX","right","topicLine","_this2","parentTopic","updateConnections","updateParentConnections","updateChildConnections","nodeRect","getBoundRect","getRootTopic","resetPosToCenter","topic","Curve","quadraticWidth","createGradientCurve","tan","atan","offsetX","sin","offsetY","cos","realStartX1","realStartY1","handleX","handleY","handleOffestX","realStartX2","realStartY2","RootTopic","leftChildren","rightChildrenTopic","createChildrenByStructure","leftChildrenTopic","resetNodePos","resetChildTopicPos","getViewportSize","vw","vh","centerPosX","centerPosY","nodeW","topics","topicSizes","totalHeight","total","current","posTop","size","posLeft","_this3","getPosition","curve","_this4","_level","_id","_handlers","_gatorInstances","_matchesSelector","selector","boundElement","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","Gator","matchesSelector","_removeHandler","gator","id","hasOwnProperty","_bind","events","addEvent","_getGlobalCallback","match","srcElement","matchesEvent","cancelBubble","cancel","_handleEvent","preventDefault","useCapture","OrgMind","rootTopic","treeToArray","nodes","childKey","list","triggerTopicExpand","$topic","getTopicByElement","triggerExpand","find","Connection","from","to","$path","getPath","LinkLine","pathStyle","$line","$arrow","getArrowPath","fromX","fromY","toX","toY","handleOffsetX","handleOffset","vertex1","vertex2","getLinkDirection","fromBound","toBound","rect1","rect2","isVertOverlap","bottom","isHoriOverlap","vertInstance","FlowMind","$viewport","nodeTree","createLabels","createConnections","hideLabel","axis","parents","leaf","console","log","$labelContainer","rootNode","rootW","rootH","setNodePosition","nodeObjList","totalLeaf","nodeObj","leafs","posX","subNodeObjList","posY","nodeBound","getNodeBound","subNodeObj","connectionLabel","subNodeBound","drawLink","line","labelEl","connections","fromNode","toNode","parentBound","childBound","label","drawLabel","$label","innerText","connection","fromBoundRect","_this5","toBoundRect","fromLeft","fromRight","fromTop","fromBottom","fromWidth","fromHeight","toLeft","toRight","toTop","toBottom","toWidth","toHeight","clear","update","updateLabel","_this6","onNodeDragStart","isNodeDragging","getNodeByChildElement","draggingNode","setDrag","originNodePos","dragStartPos","x","y","onNodeDragging","onNodeDragEnd","zIndex","updateLink","_this7","getNodeByElement","updateAllLabelPosition","Org","Flow","defaults"],"mappings":"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"}