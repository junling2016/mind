{"version":3,"file":"mind.min.js","sources":["../src/events.js","../src/utils/dom.js","../src/viewport.js","../src/options.js","../src/Tooltip.js","../src/EventDeletage.js","../node_modules/deepmerge/dist/umd.js","../src/utils/util.js","../src/Mind.js","../src/Node.js","../src/connections/topicLine.js","../src/topic.js","../src/connections/curve.js","../src/RootTopic.js","../src/OrgMind.js","../src/connections/connection.js","../src/connections/LinkLine.js","../src/FlowMind.js","../src/index.js"],"sourcesContent":["// 获取对象的所有事件记录表\nexport function getListenerMap(target, create) {\n  let listenerMap = target.listenerMap\n  if (!listenerMap && create) {\n    listenerMap = target.listenerMap = {}\n  }\n\n  return listenerMap\n}\n\n// 获取对象单一事件类型的记录\nexport function getListeners(target, type) {\n  const listenerMap = getListenerMap(target)\n  return listenerMap && listenerMap[type]\n}\n\n// 清空对象的所有事件记录\nexport function cleanListenerMap(target) {\n  delete target.listenerMap\n}\n\n// 清空对象的单一事件类型的所有记录\nexport function cleanListeners(target, type) {\n  const listenerMap = getListenerMap(target)\n  listenerMap && delete listenerMap[type]\n}\n\n// 获取事件类型\nexport function getEventName(type) {\n  return type.split('.')[0]\n}\n\n// 移除单一事件绑定\nexport function removeListener(target, type, callback) {\n  const eventName = getEventName(type)\n  target.removeEventListener(eventName, callback)\n\n  const listeners = getListeners(target, type)\n\n  if (listeners) {\n    const index = listeners.findIndex(listener => listener === callback)\n\n    if (index !== -1) {\n      listeners.splice(index, 1)\n    }\n\n    if (!listeners.length) {\n      cleanListeners(target, type)\n    }\n  }\n}\n\n// 移除对象单一事件类型的所有事件绑定\nexport function removeListeners(target, type) {\n  const listeners = getListeners(target, type)\n  const eventName = getEventName(type)\n\n  if (listeners) {\n    listeners.forEach(listener => {\n      target.removeEventListener(eventName, listener)\n    })\n\n    cleanListeners(target, type)\n\n    const listenerMap = getListenerMap(target)\n\n    if (!Object.keys(listenerMap).length) {\n      cleanListenerMap(target)\n    }\n  }\n}\n\n// 移除对象所有的事件绑定\nexport function removeAllListeners(target) {\n  const listenerMap = getListenerMap(target)\n\n  if (listenerMap) {\n    for (const type in listenerMap) {\n      removeListeners(target, type)\n    }\n  }\n}\n\n// 事件绑定\nexport function on(target, type, callback) {\n  const eventName = getEventName(type)\n\n  target.addEventListener(eventName, callback)\n\n  const listenerMap = getListenerMap(target, true)\n  let listeners = listenerMap[type]\n\n  if (!listeners) {\n    listeners = listenerMap[type] = []\n  }\n\n  listeners.push(callback)\n}\n\n// 事件解绑\nexport function off(target, type, callback) {\n  const listenerMap = getListenerMap(target)\n\n  if (!listenerMap) return\n\n  if (callback) {\n    removeListener(target, type, callback)\n  } else if (type) {\n    removeListeners(target, type)\n  } else {\n    removeAllListeners(target)\n  }\n}\n","const doc = document\n\nexport const isDOM =\n  typeof HTMLElement === 'object'\n    ? obj => obj instanceof HTMLElement\n    : obj =>\n        obj &&\n        typeof obj === 'object' &&\n        obj.nodeType === 1 &&\n        typeof obj.nodeName === 'string'\n\nconst attrsWithPixel = [\n  'width',\n  'height',\n  'fontSize',\n  'borderRadius',\n  'padding',\n  'left',\n  'right',\n  'top',\n  'bottom',\n  'borderWidth',\n  'maxWidth'\n]\n\nexport const setElementStyle = (el, style) => {\n  for (const attr in style) {\n    if (attr === 'padding') {\n      el.style.padding = `${style.padding[0]}px ${style.padding[1]}px`\n    } else {\n      el.style[attr] = attrsWithPixel.includes(attr)\n        ? `${style[attr]}px`\n        : style[attr]\n    }\n  }\n}\n\nconst svgTags = ['svg', 'g', 'path']\n\nexport const createElement = (tag, attrs, parent) => {\n  let el\n\n  if (svgTags.includes(tag)) {\n    el = doc.createElementNS('http://www.w3.org/2000/svg', tag)\n  } else {\n    el = doc.createElement(tag)\n  }\n\n  for (const attr in attrs) {\n    el.setAttribute(attr, attrs[attr])\n  }\n\n  if (parent) {\n    parent.appendChild(el)\n  }\n\n  return el\n}\n\nexport const hasClass = (el, clsName) => {\n  const classes = el.className.split(' ')\n  return classes.includes(clsName)\n}\n\n// 为dom添加class类名\nexport const addClass = (el, cls = '') => {\n  if (!el) return\n  let curClass = el.className\n  const classes = cls.split(' ')\n\n  classes.forEach(clsName => {\n    if (!clsName) return\n\n    if (el.classList) {\n      el.classList.add(clsName)\n    } else if (!hasClass(el, clsName)) {\n      curClass += ' ' + clsName\n    }\n  })\n\n  if (!el.classList) {\n    el.className = curClass\n  }\n}\n\n// 移除dom的class类名\nexport const removeClass = (el, cls) => {\n  if (!el || !cls) return\n  var classes = cls.split(' ')\n  var curClass = ' ' + el.className + ' '\n\n  for (var i = 0, j = classes.length; i < j; i++) {\n    var clsName = classes[i]\n    if (!clsName) continue\n\n    if (el.classList) {\n      el.classList.remove(clsName)\n    } else if (hasClass(el, clsName)) {\n      curClass = curClass.replace(' ' + clsName + ' ', ' ')\n    }\n  }\n  if (!el.classList) {\n    el.className = trim(curClass)\n  }\n}\n","import * as Events from './events'\nimport {\n  createElement,\n  setElementStyle,\n  addClass,\n  removeClass\n} from './utils/dom'\n\nconst doc = document\n\nclass Viewport {\n  // 顶层实例\n  root = null\n\n  // 上层容器\n  $container = null\n\n  // 视图dom节点\n  $el = null\n\n  // 配置项\n  options = null\n\n  // 当前视图缩放比例\n  scale = 1\n\n  dragingFlag = false\n\n  constructor(root) {\n    this.root = root\n    this.$container = root.$el\n    this.options = root.options\n\n    this.create()\n    this.setStyle()\n    this.moveToCenter()\n    this.initEvents()\n  }\n\n  // 创建画布\n  create() {\n    this.$el = createElement('div', { class: 'mind-designer' }, this.$container)\n  }\n\n  // 设置视图样式\n  setStyle() {\n    const { width, height, backgroundColor } = this.options\n    setElementStyle(this.$el, {\n      width,\n      height,\n      backgroundColor\n    })\n  }\n\n  // 移动到指定位置\n  moveTo(left, top) {\n    this.$container.scrollLeft = left\n    this.$container.scrollTop = top\n  }\n\n  // 将画布移动至中心位置\n  moveToCenter() {\n    const {\n      width: wrapW,\n      height: wrapH\n    } = this.$container.getBoundingClientRect()\n    const { width, height } = this.options\n\n    this.moveTo((width - wrapW) / 2, (height - wrapH) / 2)\n  }\n\n  // 注册事件\n  initEvents() {\n    Events.on(this.$el, 'mousedown.dragmove', this.onDragStart.bind(this))\n  }\n\n  // 拖动开始\n  onDragStart({ pageX, pageY }) {\n    const { scrollLeft, scrollTop } = this.$container\n    this.dragStartMousePosition = {\n      pageX,\n      pageY\n    }\n    this.dragStartScroll = {\n      scrollLeft,\n      scrollTop\n    }\n\n    Events.on(doc, 'mousemove.dragmove', this.onDraging.bind(this))\n    Events.on(doc, 'mouseup.dragmove', this.onDragEnd.bind(this))\n  }\n\n  // 拖动中\n  onDraging(event) {\n    const { scrollLeft, scrollTop } = this.dragStartScroll\n    const { pageX, pageY } = this.dragStartMousePosition\n    const curScrollLeft = scrollLeft - event.pageX + pageX\n    const curScrollTop = scrollTop - event.pageY + pageY\n\n    this.moveTo(curScrollLeft, curScrollTop)\n\n    if (!this.dragingFlag) {\n      addClass(this.$el, 'mind-no-event')\n      this.dragingFlag = true\n    }\n  }\n\n  // 结束拖动\n  onDragEnd(e) {\n    e.stopPropagation()\n    Events.off(doc, 'mousemove.dragmove')\n    Events.off(doc, 'mouseup.dragmove')\n    this.dragingFlag = false\n    removeClass(this.$el, 'mind-no-event')\n  }\n\n  // 缩放\n  zoom(scale) {\n    this.scale = scale || 1\n    setElementStyle(this.$el, { transform: `scale(${this.scale})` })\n  }\n\n  // 放大\n  zoomIn() {\n    const { zoomMax, zoomStep } = this.options\n    this.zoom(Math.min(this.scale + zoomStep, zoomMax))\n  }\n\n  // 缩小\n  zoomOut() {\n    const { zoomMin, zoomStep } = this.options\n    this.zoom(Math.max(this.scale - zoomStep, zoomMin))\n  }\n\n  getZoom() {\n    return this.scale\n  }\n}\n\nexport default Viewport\n","export default {\n  lineColor: ['#FDB813', '#80BC42', '#e85d4e', '#127c97', '#ffcccc', '#67ccff'],\n  type: 'org', // org | diagram\n  width: 20000,\n  height: 20000,\n  nodeDragEnable: false,\n  showConnectionLabel: true,\n  showTooltip: true,\n  tooltipDelay: 500,\n  formatTooltip: null,\n  backgroundColor: '#fff',\n  zoomMax: 2,\n  zoomMin: 0.4,\n  zoomStep: 0.15,\n  rootMargin: 80,\n  branchMargin: 20,\n  branchShowIndex: false,\n\n  flowNodeMarginW: 200,\n  flowNodeMarginH: 60,\n  flowRootMargin: 200,\n  // rootNodeStyle: {\n  //   borderRadius: 5,\n  //   fontSize: 20,\n  //   fontWeight: 'normal',\n  //   color: '#fff',\n  //   backgroundColor: '#50c28b',\n  //   padding: [10, 12],\n  //   borderColor: '#50c28b',\n  //   borderWidth: 0,\n  //   borderStyle: 'solid'\n  // },\n  // branchNodeStyle: {\n  //   borderRadius: 4,\n  //   fontSize: 14,\n  //   fontWeight: 'normal',\n  //   color: '#333',\n  //   backgroundColor: '#fff',\n  //   borderColor: '#FDB813',\n  //   borderWidth: 2,\n  //   borderStyle: 'solid',\n  //   padding: [6, 8]\n  // },\n  // normalNodeStyle: {\n  //   borderRadius: 3,\n  //   fontSize: 12,\n  //   fontWeight: 'normal',\n  //   color: '#666',\n  //   backgroundColor: 'rgb(254, 240, 201)',\n  //   borderColor: 'rgb(254, 240, 201)',\n  //   borderStyle: 'solid',\n  //   borderWidth: 0,\n  //   padding: [4, 10],\n  //   boxShadow: '1px 1px 1px rgba(0, 0, 0, 0.1)'\n  // },\n\n  // flowNodeStyle: {\n  //   borderRadius: 4,\n  //   fontSize: 14,\n  //   fontWeight: 'normal',\n  //   color: '#333',\n  //   backgroundColor: 'rgb(254, 240, 201)',\n  //   borderColor: '#FDB813',\n  //   borderWidth: 0,\n  //   borderStyle: 'solid',\n  //   padding: [6, 8]\n  // },\n\n  normalLineStyle: {\n    stroke: 'rgb(58, 169, 206)',\n    strokeWidth: 1,\n    strokeLinecap: 'square',\n    fill: 'none'\n  },\n\n  linkLineStyle: {\n    stroke: 'rgb(113, 203, 45)',\n    strokeWidth: 2,\n    strokeLinecap: 'square',\n    strokeLinejoin: 'round',\n    fill: 'none'\n  },\n\n  onNodeClick: null\n}\n","import {\n  createElement,\n  setElementStyle,\n  addClass,\n  removeClass\n} from './utils/dom'\n\nconst body = document.body\nlet $tooltip\nlet positionX = 0\nlet positionY = 0\nlet delayTimeout\n\nconst init = () => {\n  if ($tooltip) return\n\n  $tooltip = createElement('div', {\n    class: 'mind-tooltip'\n  })\n\n  body.appendChild($tooltip)\n}\n\nconst resetPosition = () => {\n  if (!$tooltip) return\n\n  const { width, height } = $tooltip.getBoundingClientRect()\n  const arrowHeight = 4\n  setElementStyle($tooltip, {\n    left: positionX - width / 2,\n    top: positionY - height - arrowHeight\n  })\n}\n\nexport const show = delay => {\n  if (!$tooltip) {\n    init()\n  }\n\n  if (delay) {\n    delayTimeout = setTimeout(() => {\n      addClass($tooltip, 'show')\n      resetPosition()\n    }, delay)\n  } else {\n    addClass($tooltip, 'show')\n    resetPosition()\n  }\n}\n\nexport const hide = () => {\n  if (!$tooltip) return\n\n  if (delayTimeout) {\n    clearTimeout(delayTimeout)\n    delayTimeout = null\n  }\n\n  removeClass($tooltip, 'show')\n  $tooltip.style.left = ''\n  $tooltip.style.top = ''\n}\n\nexport const setContent = content => {\n  if (!$tooltip) {\n    init()\n  }\n\n  $tooltip.innerHTML = content\n}\n\nexport const setPosition = (left, top) => {\n  positionX = left\n  positionY = top\n}\n\nexport const destroy = () => {\n  if (!$tooltip) return\n  body.removeChild($tooltip)\n  $tooltip = null\n}\n","let _matcher\nlet _level = 0\nlet _id = 0\nconst _handlers = {}\nconst _gatorInstances = {}\n\nfunction _addEvent(gator, type, callback) {\n  // blur and focus do not bubble up but if you use event capturing\n  // then you will get them\n  type = type.split('.')[0]\n  var useCapture = type == 'blur' || type == 'focus'\n  gator.element.addEventListener(type, callback, useCapture)\n}\n\nfunction _cancel(e) {\n  e.preventDefault()\n  e.stopPropagation()\n}\n\n/**\n * returns function to use for determining if an element\n * matches a query selector\n *\n * @returns {Function}\n */\nfunction _getMatcher(element) {\n  if (_matcher) {\n    return _matcher\n  }\n\n  if (element.matches) {\n    _matcher = element.matches\n    return _matcher\n  }\n\n  if (element.webkitMatchesSelector) {\n    _matcher = element.webkitMatchesSelector\n    return _matcher\n  }\n\n  if (element.mozMatchesSelector) {\n    _matcher = element.mozMatchesSelector\n    return _matcher\n  }\n\n  if (element.msMatchesSelector) {\n    _matcher = element.msMatchesSelector\n    return _matcher\n  }\n\n  if (element.oMatchesSelector) {\n    _matcher = element.oMatchesSelector\n    return _matcher\n  }\n\n  // if it doesn't match a native browser method\n  // fall back to the gator function\n  _matcher = Gator.matchesSelector\n  return _matcher\n}\n\n/**\n * determines if the specified element matches a given selector\n *\n * @param {Node} element - the element to compare against the selector\n * @param {string} selector\n * @param {Node} boundElement - the element the listener was attached to\n * @returns {void|Node}\n */\nfunction _matchesSelector(element, selector, boundElement) {\n  // no selector means this event was bound directly to this element\n  if (selector == '_root') {\n    return boundElement\n  }\n\n  // if we have moved up to the element you bound the event to\n  // then we have come too far\n  if (element === boundElement) {\n    return\n  }\n\n  // if this is a match then we are done!\n  if (_getMatcher(element).call(element, selector)) {\n    return element\n  }\n\n  // if this element did not match but has a parent we should try\n  // going up the tree to see if any of the parent elements match\n  // for example if you are looking for a click on an <a> tag but there\n  // is a <span> inside of the a tag that it is the target,\n  // it should still work\n  if (element.parentNode) {\n    _level++\n    return _matchesSelector(element.parentNode, selector, boundElement)\n  }\n}\n\nfunction _addHandler(gator, event, selector, callback) {\n  if (!_handlers[gator.id]) {\n    _handlers[gator.id] = {}\n  }\n\n  if (!_handlers[gator.id][event]) {\n    _handlers[gator.id][event] = {}\n  }\n\n  if (!_handlers[gator.id][event][selector]) {\n    _handlers[gator.id][event][selector] = []\n  }\n\n  _handlers[gator.id][event][selector].push(callback)\n}\n\nfunction _removeHandler(gator, event, selector, callback) {\n  // if there are no events tied to this element at all\n  // then don't do anything\n  if (!_handlers[gator.id]) {\n    return\n  }\n\n  // if there is no event type specified then remove all events\n  // example: Gator(element).off()\n  if (!event) {\n    for (var type in _handlers[gator.id]) {\n      if (_handlers[gator.id].hasOwnProperty(type)) {\n        _handlers[gator.id][type] = {}\n      }\n    }\n    return\n  }\n\n  // if no callback or selector is specified remove all events of this type\n  // example: Gator(element).off('click')\n  if (!callback && !selector) {\n    _handlers[gator.id][event] = {}\n    return\n  }\n\n  // if a selector is specified but no callback remove all events\n  // for this selector\n  // example: Gator(element).off('click', '.sub-element')\n  if (!callback) {\n    delete _handlers[gator.id][event][selector]\n    return\n  }\n\n  // if we have specified an event type, selector, and callback then we\n  // need to make sure there are callbacks tied to this selector to\n  // begin with.  if there aren't then we can stop here\n  if (!_handlers[gator.id][event][selector]) {\n    return\n  }\n\n  // if there are then loop through all the callbacks and if we find\n  // one that matches remove it from the array\n  for (var i = 0; i < _handlers[gator.id][event][selector].length; i++) {\n    if (_handlers[gator.id][event][selector][i] === callback) {\n      _handlers[gator.id][event][selector].splice(i, 1)\n      break\n    }\n  }\n}\n\nfunction _handleEvent(id, e, type) {\n  if (!_handlers[id][type]) {\n    return\n  }\n\n  var target = e.target || e.srcElement,\n    selector,\n    match,\n    matches = {},\n    i = 0,\n    j = 0\n\n  // find all events that match\n  _level = 0\n  for (selector in _handlers[id][type]) {\n    if (_handlers[id][type].hasOwnProperty(selector)) {\n      match = _matchesSelector(target, selector, _gatorInstances[id].element)\n\n      if (\n        match &&\n        Gator.matchesEvent(\n          type,\n          _gatorInstances[id].element,\n          match,\n          selector == '_root',\n          e\n        )\n      ) {\n        _level++\n        _handlers[id][type][selector].match = match\n        matches[_level] = _handlers[id][type][selector]\n      }\n    }\n  }\n\n  // stopPropagation() fails to set cancelBubble to true in Webkit\n  // @see http://code.google.com/p/chromium/issues/detail?id=162270\n  e.stopPropagation = function() {\n    e.cancelBubble = true\n  }\n\n  for (i = 0; i <= _level; i++) {\n    if (matches[i]) {\n      for (j = 0; j < matches[i].length; j++) {\n        if (matches[i][j].call(matches[i].match, e) === false) {\n          Gator.cancel(e)\n          return\n        }\n\n        if (e.cancelBubble) {\n          return\n        }\n      }\n    }\n  }\n}\n\n/**\n * binds the specified events to the element\n *\n * @param {string|Array} events\n * @param {string} selector\n * @param {Function} callback\n * @param {boolean=} remove\n * @returns {Object}\n */\nfunction _bind(events, selector, callback, remove) {\n  // fail silently if you pass null or undefined as an alement\n  // in the Gator constructor\n  if (!this.element) {\n    return\n  }\n\n  if (!(events instanceof Array)) {\n    events = [events]\n  }\n\n  if (!callback && typeof selector == 'function') {\n    callback = selector\n    selector = '_root'\n  }\n\n  var id = this.id,\n    i\n\n  function _getGlobalCallback(type) {\n    return function(e) {\n      _handleEvent(id, e, type)\n    }\n  }\n\n  for (i = 0; i < events.length; i++) {\n    if (remove) {\n      _removeHandler(this, events[i], selector, callback)\n      continue\n    }\n\n    if (!_handlers[id] || !_handlers[id][events[i]]) {\n      Gator.addEvent(this, events[i], _getGlobalCallback(events[i]))\n    }\n\n    _addHandler(this, events[i], selector, callback)\n  }\n\n  return this\n}\n\n/**\n * Gator object constructor\n *\n * @param {Node} element\n */\nfunction Gator(element, id) {\n  // called as function\n  if (!(this instanceof Gator)) {\n    // only keep one Gator instance per node to make sure that\n    // we don't create a ton of new objects if you want to delegate\n    // multiple events from the same node\n    //\n    // for example: Gator(document).on(...\n    for (var key in _gatorInstances) {\n      if (_gatorInstances[key].element === element) {\n        return _gatorInstances[key]\n      }\n    }\n\n    _id++\n    _gatorInstances[_id] = new Gator(element, _id)\n\n    return _gatorInstances[_id]\n  }\n\n  this.element = element\n  this.id = id\n}\n\n/**\n * adds an event\n *\n * @param {string|Array} events\n * @param {string} selector\n * @param {Function} callback\n * @returns {Object}\n */\nGator.prototype.on = function(events, selector, callback) {\n  return _bind.call(this, events, selector, callback)\n}\n\n/**\n * removes an event\n *\n * @param {string|Array} events\n * @param {string} selector\n * @param {Function} callback\n * @returns {Object}\n */\nGator.prototype.off = function(events, selector, callback) {\n  return _bind.call(this, events, selector, callback, true)\n}\n\nGator.matchesSelector = function() {}\nGator.cancel = _cancel\nGator.addEvent = _addEvent\nGator.matchesEvent = function() {\n  return true\n}\n\nexport default Gator\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.deepmerge = factory());\n}(this, (function () { 'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nreturn deepmerge_1;\n\n})));\n","import deepmerge from 'deepmerge'\n\nexport const deepMerge = (...source) => {\n  source = source.filter(item => !!item)\n  return deepmerge.all(source, {\n    arrayMerge: (destinationArray, sourceArray) => sourceArray\n  })\n}\n\nexport const isDOM =\n  typeof HTMLElement === 'object'\n    ? obj => obj instanceof HTMLElement\n    : obj =>\n        obj &&\n        typeof obj === 'object' &&\n        obj.nodeType === 1 &&\n        typeof obj.nodeName === 'string'\n\nexport const treeToArray = (nodes, childKey = 'children') => {\n  let list = []\n\n  if (nodes instanceof Array) {\n    nodes.forEach(node => {\n      list.push(node)\n      list = list.concat(treeToArray(node[childKey]))\n    })\n  } else {\n    list.push(nodes)\n    list = list.concat(treeToArray(nodes[childKey]))\n  }\n\n  return list\n}\n","import Viewport from './viewport'\nimport options from './options'\nimport { deepMerge } from './utils/util'\nimport { createElement } from './utils/dom'\nimport * as Tooltip from './Tooltip'\n\nconst doc = document\n\nclass Mind {\n  // 容器\n  $container = null\n\n  // dom对象\n  $el = null\n\n  // 配置项\n  options = options\n\n  // 视图画布\n  viewport = null\n\n  constructor(el, options) {\n    this.$container = typeof el === 'string' ? doc.querySelector(el) : el\n    this.options = deepMerge(this.options, options)\n    this.create()\n    this.createViewport()\n  }\n\n  // 创建组件容器\n  create() {\n    this.$el = createElement(\n      'div',\n      {\n        class: 'mind-container'\n      },\n      this.$container\n    )\n  }\n\n  // 创建画布容器\n  createViewport() {\n    this.viewport = new Viewport(this)\n  }\n\n  // 获取画布尺寸\n  getViewportSize() {\n    const { width, height } = this.options\n    return { width, height }\n  }\n\n  // 获取当前画布缩放比例\n  getZoom() {\n    return this.viewport.getZoom()\n  }\n\n  // 移除dom并注销事件\n  destroy() {\n    this.$container.removeChild(this.$el)\n    Tooltip.destroy()\n  }\n}\n\nexport default Mind\n","import defaultOptions from './options'\nimport * as Tooltip from './Tooltip'\nimport * as Events from './events'\nimport { createElement, setElementStyle, addClass } from './utils/dom'\nimport { deepMerge } from './utils/util'\n\nclass Node {\n  // dom对象\n  $el = null\n\n  // 伸缩句柄对象\n  $expandBox = null\n\n  // 配置项\n  options = {\n    nodeType: 'normal',\n    data: null,\n    showTooltip: false,\n    formatTooltip: null,\n    tooltipDelay: 0\n  }\n\n  constructor(options) {\n    this.options = deepMerge(this.options, options)\n    this.create()\n    this.setStyle()\n    this.initEvents()\n  }\n\n  // 创建dom\n  create() {\n    const { title } = this.options.data\n    this.$el = createElement('div', { class: 'mind-node' })\n    const $title = createElement('div', { class: 'mind-node-inner' }, this.$el)\n    $title.innerText = title\n  }\n\n  // 设置主节点样式\n  setStyle() {\n    const { nodeType, data } = this.options\n    // const style = deepMerge(defaultOptions[`${nodeType}NodeStyle`], data.style)\n    setElementStyle(this.$el, data.style)\n\n    if (data.className) {\n      addClass(this.$el, data.className)\n    }\n  }\n\n  initEvents() {\n    Events.on(this.$el, 'mouseenter.nodehover', this.onMouseEnter.bind(this))\n    Events.on(this.$el, 'mouseleave.nodehover', this.onMouseLeave.bind(this))\n  }\n\n  onMouseEnter() {\n    const { data, showTooltip, formatTooltip, tooltipDelay } = this.options\n    if (!showTooltip) return\n    const content = formatTooltip ? formatTooltip(data, this) : data.title\n    if (!content) return\n\n    const { width, left, top } = this.getSize()\n    Tooltip.setContent(content)\n    Tooltip.setPosition(left + width / 2, top)\n    Tooltip.show(tooltipDelay)\n  }\n\n  onMouseLeave() {\n    Tooltip.hide()\n  }\n\n  getSize() {\n    return this.$el.getBoundingClientRect()\n  }\n\n  getData() {\n    return this.options.data\n  }\n\n  // 设置节点位置\n  setPosition(left, top) {\n    setElementStyle(this.$el, {\n      left,\n      top\n    })\n  }\n\n  // 移除节点\n  remove() {\n    this.container && this.container.removeChild(this.el)\n  }\n}\n\nexport default Node\n","import { createElement } from '../utils/dom'\n\nclass TopicLine {\n  // 路径的dom对象\n  $el = null\n\n  options = {\n    // 起点位置\n    start: [],\n    // 终点位置\n    end: [],\n    // 弯曲半径\n    radius: 4,\n    // 线条颜色\n    stroke: '#43a9ff',\n    // 线条粗细\n    strokeWidth: 1,\n    // 线条填充色\n    fill: 'none',\n    // 路径终结类型\n    strokeLinecap: 'square'\n  }\n\n  constructor(options) {\n    Object.assign(this.options, options)\n    this.create()\n  }\n\n  // 创建曲线\n  create() {\n    const {\n      start,\n      end,\n      radius,\n      stroke,\n      strokeWidth,\n      strokeLinecap,\n      fill\n    } = this.options\n\n    const startX = start[0]\n    const startY = start[1]\n    const endX = end[0]\n    const endY = end[1]\n\n    let pathD\n\n    if (Math.abs(startY - endY) < radius) {\n      pathD = ['M', startX, startY, 'L', endX, endY]\n    } else {\n      let sweepFlag =\n        (endX > startX && endY < startY) || (startX > endX && startY < endY)\n          ? 1\n          : 0\n      const turnX1 = (startX + endX) / 2\n      const turnX2 =\n        endX > startX\n          ? Math.min(turnX1 + radius, endX)\n          : Math.max(turnX1 - radius, endX)\n      const turnY1 =\n        endY > startY\n          ? Math.max(startY, endY - radius)\n          : Math.min(startY, endY + radius)\n\n      pathD = [\n        'M',\n        startX,\n        startY,\n        'L',\n        turnX1,\n        startY,\n        'L',\n        turnX1,\n        turnY1,\n        'A',\n        radius,\n        radius,\n        0,\n        0,\n        sweepFlag,\n        turnX2,\n        endY,\n        'L',\n        endX,\n        endY\n      ]\n    }\n\n    this.$el = createElement('path', {\n      d: pathD.join(' '),\n      stroke,\n      'stroke-width': strokeWidth,\n      'stroke-linecap': strokeLinecap,\n      fill\n    })\n  }\n}\n\nexport default TopicLine\n","import Node from './Node'\nimport TopicLine from './connections/topicLine'\nimport {\n  createElement,\n  setElementStyle,\n  addClass,\n  removeClass\n} from './utils/dom'\n\nclass Topic {\n  // 配置项\n  options = {\n    // 根实例\n    mind: null,\n    // 父主题\n    parent: null,\n    // root, left, right\n    structure: 'right',\n    // 数据\n    data: null\n  }\n\n  // 根实例\n  mind = null\n\n  // dom对象\n  $el = null\n\n  $topicBox = null\n\n  $expandBox = null\n\n  $pathBox = null\n\n  // 路径组\n  $pathGroup = null\n\n  // 当前节点\n  node = null\n\n  // 父主题\n  parent = null\n\n  // 子主题\n  children = []\n\n  // 当前节点是否展开\n  isExpand = true\n\n  constructor(options) {\n    Object.assign(this.options, options)\n\n    this.parent = this.options.parent\n    this.mind = this.options.mind\n\n    this.isExpand = options.data.expand !== false\n\n    this.create()\n  }\n\n  render() {\n    const { children } = this\n\n    if (children.length) {\n      this.isExpand && this.drawLines()\n      children.forEach(child => {\n        child.render()\n      })\n    }\n  }\n\n  // 创建\n  create() {\n    const { data, structure } = this.options\n\n    this.$el = createElement('div', {\n      class: `mind-topic-container mind-topic-${structure} ${\n        this.isExpand ? 'is-expand' : ''\n      }`\n    })\n\n    this.createNode()\n\n    if (data.children && data.children.length) {\n      this.createChildren()\n      this.createPaths()\n      this.createExpand()\n    }\n  }\n\n  // 创建主题节点\n  createNode() {\n    const { parent, options } = this\n    let nodeType = 'normal'\n\n    const $topicBox = (this.$topicBox = createElement(\n      'div',\n      {\n        class: 'mind-topic-box'\n      },\n      this.$el\n    ))\n\n    if (options.structure === 'root') {\n      nodeType = 'root'\n    } else if (parent && parent.options.structure === 'root') {\n      nodeType = 'branch'\n    }\n\n    this.node = new Node({\n      nodeType,\n      data: options.data,\n      showTooltip: this.mind.options.showTooltip,\n      formatTooltip: this.mind.options.formatTooltip,\n      tooltipDelay: this.mind.options.tooltipDelay\n    })\n\n    $topicBox.appendChild(this.node.$el)\n  }\n\n  // 创建伸缩句柄\n  createExpand() {\n    this.$expandBox = createElement(\n      'span',\n      {\n        class: 'mind-expand-box'\n      },\n      this.$topicBox\n    )\n  }\n\n  // 创建子主题\n  createChildren() {\n    const { data, structure } = this.options\n    const { children } = data\n    const $child = createElement('div', { class: 'mind-topic-children' })\n\n    this.children = children.map(child => {\n      const childTopic = new Topic({\n        mind: this.mind,\n        parent: this,\n        structure,\n        data: child\n      })\n      $child.appendChild(childTopic.$el)\n\n      return childTopic\n    })\n\n    if (structure === 'left') {\n      this.$el.insertBefore($child, this.$topicBox)\n    } else {\n      this.$el.appendChild($child)\n    }\n  }\n\n  // 创建路径\n  createPaths() {\n    const svg = (this.$pathBox = createElement(\n      'svg',\n      {\n        width: '100%',\n        height: '100%',\n        xmlns: 'http://www.w3.org/2000/svg',\n        'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n      },\n      this.$el\n    ))\n\n    this.$pathGroup = createElement('g', null, svg)\n  }\n\n  // 设置定位\n  setPosition(left, top) {\n    setElementStyle(this.$el, {\n      left,\n      top\n    })\n  }\n\n  // 获取定位位置\n  getPosition() {\n    const left = parseInt(this.$el.style.left, 10)\n    const top = parseInt(this.$el.style.top, 10)\n\n    return {\n      left,\n      top\n    }\n  }\n\n  // 获取尺寸\n  getSize() {\n    return this.$el.getBoundingClientRect()\n  }\n\n  // 绘制连接线\n  drawLines() {\n    const zoom = this.mind.getZoom()\n    const { structure } = this.options\n    const topicRect = this.getSize()\n    const startPos = this.getLineStartPos()\n\n    this.children.forEach(child => {\n      const subTopicRect = child.getSize()\n      const endPosY =\n        (subTopicRect.top - topicRect.top + subTopicRect.height / 2) / zoom\n      const endPosX =\n        (structure === 'left'\n          ? subTopicRect.right - topicRect.left\n          : subTopicRect.left - topicRect.left) / zoom\n      const topicLine = new TopicLine({\n        start: [startPos.left / zoom, startPos.top / zoom],\n        end: [endPosX, endPosY]\n      })\n\n      this.$pathGroup.appendChild(topicLine.$el)\n    })\n  }\n\n  // 更新当前节点的连接路径\n  updateConnections() {\n    if (!this.children.length) return\n\n    this.$pathGroup.innerHTML = ''\n\n    if (this.isExpand) {\n      this.drawLines()\n    }\n  }\n\n  // 更新父节点的连接关系，并层层往上更新\n  updateParentConnections() {\n    let parentTopic = this.parent\n\n    if (parentTopic) {\n      parentTopic.updateConnections()\n      parentTopic.updateParentConnections()\n    }\n  }\n\n  // 更新子节点的连接关系，并层层往下更新\n  updateChildConnections() {\n    this.children.forEach(child => {\n      child.updateConnections()\n      child.updateChildConnections()\n    })\n  }\n\n  // 获取连线起始位置\n  getLineStartPos() {\n    const { structure } = this.options\n    const topicRect = this.getSize()\n    const nodeRect = this.node.getSize()\n    const top = nodeRect.top - topicRect.top + nodeRect.height / 2\n    const left =\n      structure === 'left'\n        ? nodeRect.left - topicRect.left\n        : nodeRect.left - topicRect.left + nodeRect.width\n\n    return {\n      left,\n      top\n    }\n  }\n\n  triggerExpand() {\n    this.isExpand = !this.isExpand\n\n    if (this.isExpand) {\n      addClass(this.$el, 'is-expand')\n    } else {\n      removeClass(this.$el, 'is-expand')\n    }\n\n    const rootTopic = this.getRootTopic()\n    rootTopic.resetPosToCenter()\n\n    this.updateParentConnections()\n    this.updateConnections()\n    this.updateChildConnections()\n  }\n\n  // 获取根主题\n  getRootTopic() {\n    let topic = this\n\n    while (topic.parent) {\n      topic = topic.parent\n    }\n\n    return topic\n  }\n}\n\nexport default Topic\n","import { createElement } from '../utils/dom'\n\nclass Curve {\n  // 路径的dom对象\n  $el = null\n\n  options = {\n    // gradient, quadratic, cubic\n    type: 'quadratic',\n    // 起点位置\n    start: [],\n    // 终点位置\n    end: [],\n    // 渐变线起点宽度\n    quadraticWidth: 10,\n    // 线条颜色\n    stroke: '#43a9ff',\n    // 线条粗细\n    strokeWidth: 2,\n    // 线条填充色\n    fill: 'none',\n    // 路径终结类型\n    strokeLinecap: 'square'\n  }\n\n  constructor(options) {\n    Object.assign(this.options, options)\n    this.create()\n  }\n\n  // 创建曲线\n  create() {\n    const { type } = this.options\n\n    switch (type) {\n      case 'gradient':\n        this.createGradientCurve()\n        break\n    }\n  }\n\n  // 创建宽度渐变的二次贝塞尔曲线\n  createGradientCurve() {\n    const {\n      start,\n      end,\n      quadraticWidth,\n      stroke,\n      strokeWidth,\n      strokeLinecap,\n      fill\n    } = this.options\n\n    const startX = start[0]\n    const startY = start[1]\n    const endX = end[0]\n    const endY = end[1]\n\n    let pathD\n\n    if (Math.abs(endY - startY) < quadraticWidth) {\n      const tan = Math.atan((endY - startY) / (endX - startX))\n      const offsetX = (Math.sin(tan) * quadraticWidth) / 2\n      const offsetY = (Math.cos(tan) * quadraticWidth) / 2\n      const realStartX1 = startX + offsetX\n      const realStartY1 = startY - offsetY\n      const realStartX2 = startX - offsetX\n      const realStartY2 = startY + offsetY\n\n      pathD = [\n        'M',\n        realStartX1,\n        realStartY1,\n        'L',\n        endX,\n        endY,\n        'L',\n        realStartX2,\n        realStartY2,\n        'L',\n        realStartX1,\n        realStartY1\n      ]\n    } else {\n      const handleX = (endX - startX) * 0.2 + startX\n      const handleY = endY\n      const handleOffestX =\n        (endX > startX && endY > startY) || (endX < startX && endY < startY)\n          ? -quadraticWidth\n          : quadraticWidth\n      const tan = Math.atan((handleY - startY) / (handleX - startX))\n      const offsetX = (Math.sin(tan) * quadraticWidth) / 2\n      const offsetY = (Math.cos(tan) * quadraticWidth) / 2\n      const realStartX1 = startX + offsetX\n      const realStartY1 = startY - offsetY\n      const realStartX2 = startX - offsetX\n      const realStartY2 = startY + offsetY\n\n      pathD = [\n        'M',\n        realStartX1,\n        realStartY1,\n        'C',\n        realStartX1,\n        realStartY1,\n        handleX,\n        handleY,\n        endX,\n        endY,\n        'C',\n        handleX + handleOffestX,\n        handleY,\n        realStartX2,\n        realStartY2,\n        realStartX2,\n        realStartY2,\n        'L',\n        realStartX1,\n        realStartY1,\n        'Z'\n      ]\n    }\n\n    this.$el = createElement('path', {\n      d: pathD.join(' '),\n      stroke,\n      'stroke-width': strokeWidth,\n      'stroke-linecap': strokeLinecap,\n      fill\n    })\n  }\n}\n\nexport default Curve\n","import Topic from './topic'\nimport Curve from './connections/curve'\nimport { createElement, setElementStyle } from './utils/dom'\n\nclass RootTopic extends Topic {\n  // 中心点横坐标位置\n  centerPosX = null\n\n  // 中心点纵坐标位置\n  centerPosY = null\n\n  constructor(options) {\n    super(options)\n  }\n\n  createChildren() {\n    const { children, leftChildren } = this.options.data\n    const $child = createElement('div', { class: 'mind-topic-children' })\n    const rightChildrenTopic = this.createChildrenByStructure(\n      children,\n      'right',\n      $child\n    )\n    const leftChildrenTopic = this.createChildrenByStructure(\n      leftChildren,\n      'left',\n      $child\n    )\n\n    this.children = rightChildrenTopic.concat(leftChildrenTopic)\n    this.$el.appendChild($child)\n  }\n\n  createChildrenByStructure(children, structure, $child) {\n    if (!children) return []\n\n    return children.map(child => {\n      const childTopic = new Topic({\n        mind: this.mind,\n        parent: this,\n        structure,\n        data: child\n      })\n      $child.appendChild(childTopic.$el)\n\n      return childTopic\n    })\n  }\n\n  render() {\n    this.mind.viewport.$el.appendChild(this.$el)\n    this.resetPosToCenter()\n    this.drawLines()\n\n    this.children.forEach(child => {\n      child.render()\n    })\n  }\n\n  // 将结构定位到画布中心\n  resetPosToCenter() {\n    this.resetNodePos()\n    this.resetChildTopicPos('left')\n    this.resetChildTopicPos('right')\n  }\n\n  // 定位根节点\n  resetNodePos() {\n    const zoom = this.mind.getZoom()\n    const { width, height } = this.node.getSize()\n    const { width: vw, height: vh } = this.mind.getViewportSize()\n    const left = (vw - width / zoom) / 2\n    const top = (vh - height / zoom) / 2\n\n    this.centerPosX = vw / 2\n    this.centerPosY = vh / 2\n\n    setElementStyle(this.$topicBox, {\n      left,\n      top\n    })\n  }\n\n  // 定位分支主题\n  resetChildTopicPos(structure) {\n    const zoom = this.mind.getZoom()\n    const { width: nodeW } = this.node.getSize()\n    const { rootMargin, branchMargin } = this.mind.options\n    const topics = this.children.filter(\n      child => child.options.structure === structure\n    )\n    const topicSizes = topics.map(child => child.getSize())\n\n    let totalHeight = topicSizes.reduce((total, current) => {\n      return total + current.height / zoom\n    }, 0)\n\n    totalHeight += (topics.length - 1) * branchMargin\n\n    let posTop = this.centerPosY - totalHeight / 2\n\n    topicSizes.forEach((size, index) => {\n      const topic = topics[index]\n      const posLeft =\n        structure === 'left'\n          ? this.centerPosX - nodeW / zoom / 2 - rootMargin - size.width / zoom\n          : this.centerPosX + nodeW / zoom / 2 + rootMargin\n\n      topic.setPosition(posLeft, posTop)\n      posTop += size.height / zoom + branchMargin\n    })\n  }\n\n  drawLines() {\n    const zoom = this.mind.getZoom()\n    const { centerPosX, centerPosY } = this\n    const { lineColor } = this.mind.options\n\n    this.children.forEach((child, index) => {\n      const { width, height } = child.getSize()\n      const { left, top } = child.getPosition()\n      const endX =\n        child.options.structure === 'left' ? left + width / zoom : left\n      const endY = top + height / zoom / 2\n\n      const curve = new Curve({\n        type: 'gradient',\n        start: [centerPosX, centerPosY],\n        end: [endX, endY],\n        stroke: lineColor[index],\n        fill: lineColor[index]\n      })\n\n      this.$pathGroup.appendChild(curve.$el)\n    })\n  }\n}\n\nexport default RootTopic\n","import Mind from './Mind'\nimport RootTopic from './RootTopic'\nimport Gator from './EventDeletage'\nimport * as Tooltip from './Tooltip'\nimport { hasClass } from './utils/dom'\nimport { treeToArray } from './utils/util'\n\nconst doc = document\n\nclass OrgMind extends Mind {\n  // 根节点\n  rootTopic = null\n\n  // 所有节点列表\n  topics = []\n\n  constructor(el, options) {\n    super(el, options)\n\n    this.initEvents()\n    this.render()\n  }\n\n  // 开始渲染图形\n  render() {\n    this.rootTopic = new RootTopic({\n      mind: this,\n      structure: 'root',\n      data: this.options.data\n    })\n\n    this.rootTopic.render()\n    this.topics = treeToArray(this.rootTopic)\n  }\n\n  // 初始化事件\n  initEvents() {\n    Gator(doc).on(\n      'click.expand',\n      '.mind-expand-box',\n      this.triggerTopicExpand.bind(this)\n    )\n\n    Gator(doc).on('click.node', '.mind-node', this.onNodeClick.bind(this))\n  }\n\n  // 节点伸缩切换\n  triggerTopicExpand(e) {\n    const $topic = e.target.parentNode.parentNode\n    const topic = this.getTopicByElement($topic)\n    topic && topic.triggerExpand()\n  }\n\n  // 节点点击\n  onNodeClick(e) {\n    let $topic = e.target\n\n    while (!hasClass($topic, 'mind-topic-container')) {\n      $topic = $topic.parentNode\n    }\n\n    const topic = this.getTopicByElement($topic)\n\n    if (topic && this.options.onNodeClick) {\n      this.options.onNodeClick(topic.options.data, topic.node)\n    }\n  }\n\n  // 通过dom获取主题实例\n  getTopicByElement(el) {\n    return this.topics.find(topic => topic.$el === el)\n  }\n\n  // 移除dom并注销事件\n  destroy() {\n    this.$container.removeChild(this.$el)\n    Gator(doc).off('click.expand')\n    Gator(doc).off('click.node')\n    Tooltip.destroy()\n  }\n}\n\nexport default OrgMind\n","import { createElement } from '../utils/dom'\n\nclass Connection {\n  // 路径dom\n  $path = null\n\n  // 起点\n  from = null\n\n  // 终点\n  to = null\n\n  options = {\n    stroke: '#43a9ff',\n    strokeWidth: 1,\n    strokeLinecap: 'square',\n    fill: 'none'\n  }\n\n  constructor(from, to, options) {\n    this.from = from\n    this.to = to\n    Object.assign(this.options, options)\n    this.create()\n  }\n\n  create() {\n    const { stroke, strokeWidth, strokeLinecap, fill } = this.options\n\n    const $path = (this.$path = createElement('path', {\n      stroke,\n      'stroke-width': strokeWidth,\n      'stroke-linecap': strokeLinecap,\n      fill\n    }))\n\n    if (this.getPath) {\n      $path.setAttribute('d', this.getPath())\n    }\n  }\n}\n\nexport default Connection\n","import Connection from './connection'\nimport { createElement } from '../utils/dom'\n\nclass LinkLine extends Connection {\n  constructor(from, to, options) {\n    super(from, to, options)\n  }\n\n  create() {\n    const {\n      stroke,\n      strokeWidth,\n      strokeLinecap,\n      strokeLinejoin,\n      fill\n    } = this.options\n    const pathStyle = {\n      stroke,\n      'stroke-width': strokeWidth,\n      'stroke-linecap': strokeLinecap,\n      'stroke-linejoin': strokeLinejoin,\n      fill\n    }\n    const $path = (this.$path = createElement('g'))\n    const $line = createElement('path', pathStyle, $path)\n    const $arrow = createElement('path', pathStyle, $path)\n\n    $line.setAttribute('d', this.getPath())\n    $arrow.setAttribute('d', this.getArrowPath())\n  }\n\n  getPath() {\n    const fromX = this.from[0]\n    const fromY = this.from[1]\n    const toX = this.to[0]\n    const toY = this.to[1]\n    const handleOffsetX = Math.abs(fromX - toX) * 0.4\n    const handlePointX1 =\n      fromX > toX ? fromX - handleOffsetX : fromX + handleOffsetX\n    const handlePointX2 =\n      fromX > toX ? toX + handleOffsetX : toX - handleOffsetX\n\n    return [\n      'M',\n      fromX,\n      fromY,\n      'C',\n      handlePointX1,\n      fromY,\n      handlePointX2,\n      toY,\n      fromX > toX ? toX + 10 : toX - 10,\n      toY,\n      'L',\n      toX,\n      toY\n    ].join(' ')\n  }\n\n  getArrowPath() {\n    const fromX = this.from[0]\n    const toX = this.to[0]\n    const toY = this.to[1]\n\n    let vertex1\n    let vertex2\n\n    if (fromX > toX) {\n      vertex1 = [toX + 6, toY - 4]\n      vertex2 = [toX + 6, toY + 4]\n    } else {\n      vertex1 = [toX - 6, toY - 4]\n      vertex2 = [toX - 6, toY + 4]\n    }\n\n    return [\n      'M',\n      toX,\n      toY,\n      'L',\n      vertex1[0],\n      vertex1[1],\n      'M',\n      toX,\n      toY,\n      'L',\n      vertex2[0],\n      vertex2[1],\n      'Z'\n    ].join(' ')\n  }\n}\n\nexport default LinkLine\n","import Mind from './Mind'\nimport Node from './Node'\nimport LinkLine from './connections/LinkLine'\nimport Gator from './EventDeletage'\nimport { createElement, addClass, hasClass, setElementStyle } from './utils/dom'\n\nconst doc = document\n\nclass FlowMind extends Mind {\n  // 节点列表\n  nodes = []\n\n  nodeTree = null\n\n  $pathBox = null\n\n  $pathGroup = null\n\n  constructor(el, options) {\n    super(el, options)\n\n    addClass(this.$el, 'mind-flow')\n\n    this.nodeTree = this.createNode(options.data, 0)\n\n    this.nodes.forEach(({ node }) => {\n      this.viewport.$el.appendChild(node.$el)\n    })\n\n    this.createPaths()\n    this.createLabels()\n\n    this.setPosition()\n    this.createConnections(this.nodeTree)\n\n    this.initEvents()\n  }\n\n  // 创建节点\n  createNode(nodeData, axis) {\n    if (!nodeData) return\n\n    if (nodeData instanceof Array) {\n      return nodeData.map(data => {\n        const parents = this.createNode(data.parents, axis - 1)\n        const children = this.createNode(data.children, axis + 1)\n\n        const node = {\n          node: new Node({\n            nodeType: 'flow',\n            data,\n            showTooltip: this.options.showTooltip,\n            formatTooltip: this.options.formatTooltip,\n            tooltipDelay: this.options.tooltipDelay\n          }),\n          axis,\n          parents,\n          children\n        }\n\n        if (parents && parents.length) {\n          node.leaf = parents.reduce((total, parent) => total + parent.leaf, 0)\n        } else if (children && children.length) {\n          node.leaf = children.reduce((total, child) => total + child.leaf, 0)\n        } else {\n          node.leaf = 1\n        }\n\n        this.nodes.push(node)\n\n        return node\n      })\n    } else {\n      const node = {\n        node: new Node({\n          nodeType: 'root',\n          data: nodeData,\n          showTooltip: this.options.showTooltip,\n          formatTooltip: this.options.formatTooltip,\n          tooltipDelay: this.options.tooltipDelay\n        }),\n        axis,\n        parents: this.createNode(nodeData.parents, axis - 1),\n        children: this.createNode(nodeData.children, axis + 1)\n      }\n\n      this.nodes.push(node)\n      return node\n    }\n  }\n\n  // 创建路径\n  createPaths() {\n    const svg = (this.$pathBox = createElement(\n      'svg',\n      {\n        width: '100%',\n        height: '100%',\n        xmlns: 'http://www.w3.org/2000/svg',\n        'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n      },\n      this.viewport.$el\n    ))\n\n    this.$pathGroup = createElement('g', null, svg)\n  }\n\n  createLabels() {\n    this.$labelContainer = createElement(\n      'div',\n      {\n        class: 'mind-label-container'\n      },\n      this.viewport.$el\n    )\n  }\n\n  // 设置节点的定位\n  setPosition() {\n    const { width: vw, height: vh } = this.options\n    const rootNode = this.nodeTree.node\n    const { width: rootW, height: rootH } = rootNode.getSize()\n    const centerPosX = vw / 2\n    const centerPosY = vh / 2\n\n    rootNode.setPosition(centerPosX - rootW / 2, centerPosY - rootH / 2)\n\n    this.setNodePosition(this.nodeTree.parents, 'left', centerPosY)\n    this.setNodePosition(this.nodeTree.children, 'right', centerPosY)\n  }\n\n  // 计算并设置各个节点的定位\n  setNodePosition(nodeObjList, structure, centerPosY) {\n    const {\n      width: vw,\n      flowRootMargin,\n      flowNodeMarginW,\n      flowNodeMarginH\n    } = this.options\n\n    if (!nodeObjList || !nodeObjList.length) return\n\n    const centerPosX = vw / 2\n\n    const totalLeaf = nodeObjList.reduce(\n      (total, nodeObj) => nodeObj.leaf + total,\n      0\n    )\n\n    let leafs = 0\n\n    nodeObjList.forEach(nodeObj => {\n      const { width: rootW } = this.nodeTree.node.getSize()\n      const { width, height } = nodeObj.node.getSize()\n      const subNodeObjList =\n        structure === 'left' ? nodeObj.parents : nodeObj.children\n\n      let posX\n      let posY =\n        centerPosY -\n        (totalLeaf / 2 - nodeObj.leaf / 2 - leafs) * flowNodeMarginH -\n        height / 2\n\n      if (structure === 'left') {\n        posX =\n          centerPosX -\n          ((Math.abs(nodeObj.axis) - 1) * flowNodeMarginW +\n            flowRootMargin +\n            width / 2) -\n          rootW / 2\n      } else {\n        posX =\n          centerPosX +\n          ((Math.abs(nodeObj.axis) - 1) * flowNodeMarginW +\n            flowRootMargin -\n            width / 2) +\n          rootW / 2\n      }\n\n      nodeObj.node.setPosition(posX, posY)\n\n      leafs += nodeObj.leaf\n\n      this.setNodePosition(subNodeObjList, structure, posY + height / 2)\n    })\n  }\n\n  // 创建连接关系\n  createConnections(nodeObj) {\n    const { children, parents } = nodeObj\n    const nodeBound = this.getNodeBound(nodeObj)\n\n    children &&\n      children.forEach(subNodeObj => {\n        const { connectionLabel } = subNodeObj.node.options.data\n        const subNodeBound = this.getNodeBound(subNodeObj)\n        this.drawLink(nodeBound, subNodeBound, connectionLabel)\n        this.createConnections(subNodeObj)\n      })\n    parents &&\n      parents.forEach(subNodeObj => {\n        const { connectionLabel } = nodeObj.node.options.data\n        const subNodeBound = this.getNodeBound(subNodeObj)\n        this.drawLink(subNodeBound, nodeBound, connectionLabel)\n        this.createConnections(subNodeObj)\n      })\n  }\n\n  // 绘制箭头连线\n  drawLink(parentBound, childBound, label) {\n    const { linkLineStyle, showConnectionLabel } = this.options\n    const from = [\n      parentBound.left + parentBound.width,\n      parentBound.top + parentBound.height / 2\n    ]\n    const to = [childBound.left, childBound.top + childBound.height / 2]\n\n    const line = new LinkLine(from, to, linkLineStyle)\n    this.$pathGroup.appendChild(line.$path)\n\n    if (showConnectionLabel && label) {\n      this.drawLabel(parentBound, childBound, label)\n    }\n  }\n\n  drawLabel(parentBound, childBound, label) {\n    const posX = (parentBound.left + parentBound.width + childBound.left) / 2\n    const posY =\n      (parentBound.top +\n        parentBound.height / 2 +\n        childBound.top +\n        childBound.height / 2) /\n      2\n    const $label = createElement(\n      'div',\n      {\n        class: 'mind-label'\n      },\n      this.$labelContainer\n    )\n    $label.innerText = label\n\n    const { width, height } = $label.getBoundingClientRect()\n\n    setElementStyle($label, {\n      left: posX - width / 2,\n      top: posY - height / 2\n    })\n  }\n\n  initEvents() {\n    Gator(doc).on('click.node', '.mind-node', this.onNodeClick.bind(this))\n  }\n\n  // 节点点击事件\n  onNodeClick(e) {\n    const { onNodeClick } = this.options\n\n    let $node = e.target\n\n    while (!hasClass($node, 'mind-node')) {\n      $node = $node.parentNode\n    }\n\n    const node = this.getNodeByElement($node)\n    if (node && onNodeClick) {\n      onNodeClick(node.options.data, node)\n    }\n  }\n\n  // 获取节点位置和尺寸信息\n  getNodeBound(nodeObj) {\n    const { node } = nodeObj\n    const { width, height } = node.getSize()\n    const { left, top } = node.$el.style\n\n    return {\n      width,\n      height,\n      left: parseInt(left, 10),\n      top: parseInt(top, 10)\n    }\n  }\n\n  // 根据dom获取节点\n  getNodeByElement(el) {\n    const nodeObj = this.nodes.find(({ node }) => node.$el === el)\n\n    return nodeObj && nodeObj.node\n  }\n}\n\nexport default FlowMind\n","import Mind from './Mind'\nimport OrgMind from './OrgMind'\nimport FlowMind from './FlowMind'\nimport options from './options'\n\nMind.Org = OrgMind\nMind.Flow = FlowMind\nMind.defaults = options\n\nexport default Mind\n"],"names":["getListenerMap","target","create","listenerMap","getListeners","type","cleanListeners","getEventName","split","removeListeners","listeners","eventName","forEach","listener","removeEventListener","Object","keys","length","on","callback","addEventListener","push","off","index","findIndex","splice","removeListener","removeAllListeners","doc","document","attrsWithPixel","HTMLElement","setElementStyle","el","style","attr","padding","includes","svgTags","createElement","tag","attrs","parent","createElementNS","setAttribute","appendChild","hasClass","clsName","className","addClass","cls","curClass","classList","add","removeClass","classes","i","j","remove","replace","trim","Viewport","root","$container","$el","options","setStyle","moveToCenter","initEvents","class","this","width","height","backgroundColor","left","top","scrollLeft","scrollTop","getBoundingClientRect","wrapW","wrapH","moveTo","Events","onDragStart","bind","pageX","pageY","dragStartMousePosition","dragStartScroll","onDraging","onDragEnd","event","curScrollLeft","curScrollTop","dragingFlag","e","stopPropagation","scale","transform","zoomMax","zoomStep","zoom","Math","min","zoomMin","max","lineColor","nodeDragEnable","showConnectionLabel","showTooltip","tooltipDelay","formatTooltip","rootMargin","branchMargin","branchShowIndex","flowNodeMarginW","flowNodeMarginH","flowRootMargin","normalLineStyle","stroke","strokeWidth","strokeLinecap","fill","linkLineStyle","strokeLinejoin","onNodeClick","$tooltip","delayTimeout","_matcher","module","isMergeableObject","value","stringValue","prototype","toString","call","$$typeof","REACT_ELEMENT_TYPE","Symbol","for","cloneUnlessOtherwiseSpecified","clone","deepmerge","val","Array","isArray","defaultArrayMerge","source","concat","map","element","mergeObject","destination","key","customMerge","getMergeFunction","arrayMerge","sourceIsArray","targetIsArray","sourceAndTargetTypesMatch","all","array","Error","reduce","prev","next","factory","deepMerge","filter","item","destinationArray","sourceArray","body","positionX","positionY","init","resetPosition","destroy","removeChild","Mind","querySelector","createViewport","viewport","getZoom","Tooltip","Node","nodeType","data","title","innerText","onMouseEnter","onMouseLeave","content","delay","getSize","innerHTML","setTimeout","clearTimeout","container","TopicLine","start","end","radius","assign","pathD","startX","startY","endX","endY","abs","sweepFlag","turnX1","turnX2","d","join","Topic","mind","structure","isExpand","expand","children","drawLines","child","render","createNode","createChildren","createPaths","createExpand","$topicBox","node","$expandBox","$child","childTopic","_this","insertBefore","svg","$pathBox","xmlns","$pathGroup","parseInt","topicRect","startPos","getLineStartPos","subTopicRect","endPosY","endPosX","right","topicLine","_this2","parentTopic","updateConnections","updateParentConnections","updateChildConnections","nodeRect","getRootTopic","resetPosToCenter","topic","Curve","quadraticWidth","createGradientCurve","tan","atan","offsetX","sin","offsetY","cos","realStartX1","realStartY1","handleX","handleY","handleOffestX","realStartX2","realStartY2","RootTopic","leftChildren","rightChildrenTopic","createChildrenByStructure","leftChildrenTopic","resetNodePos","resetChildTopicPos","getViewportSize","vw","vh","centerPosX","centerPosY","nodeW","topics","topicSizes","totalHeight","total","current","posTop","size","posLeft","_this3","setPosition","getPosition","curve","_this4","_level","_id","_handlers","_gatorInstances","_matchesSelector","selector","boundElement","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","Gator","matchesSelector","parentNode","_removeHandler","gator","id","hasOwnProperty","_bind","events","addEvent","_getGlobalCallback","match","srcElement","matchesEvent","cancelBubble","cancel","_handleEvent","preventDefault","useCapture","OrgMind","rootTopic","treeToArray","nodes","childKey","list","triggerTopicExpand","$topic","getTopicByElement","triggerExpand","find","Connection","from","to","$path","getPath","LinkLine","pathStyle","$line","$arrow","getArrowPath","fromX","fromY","toX","toY","handleOffsetX","vertex1","vertex2","FlowMind","nodeTree","createLabels","createConnections","nodeData","axis","parents","leaf","$labelContainer","rootNode","rootW","rootH","setNodePosition","nodeObjList","totalLeaf","nodeObj","leafs","posX","subNodeObjList","posY","nodeBound","getNodeBound","subNodeObj","connectionLabel","subNodeBound","drawLink","parentBound","childBound","label","line","drawLabel","$label","$node","getNodeByElement","Org","Flow","defaults"],"mappings":"09CACO,SAASA,EAAeC,EAAQC,OACjCC,EAAcF,EAAOE,mBACpBA,GAAeD,IAClBC,EAAcF,EAAOE,YAAc,IAG9BA,EAIF,SAASC,EAAaH,EAAQI,OAC7BF,EAAcH,EAAeC,UAC5BE,GAAeA,EAAYE,GAS7B,SAASC,EAAeL,EAAQI,OAC/BF,EAAcH,EAAeC,GACnCE,UAAsBA,EAAYE,GAI7B,SAASE,EAAaF,UACpBA,EAAKG,MAAM,KAAK,GAwBlB,SAASC,EAAgBR,EAAQI,OAChCK,EAAYN,EAAaH,EAAQI,GACjCM,EAAYJ,EAAaF,MAE3BK,EAAW,CACbA,EAAUE,QAAQ,SAAAC,GAChBZ,EAAOa,oBAAoBH,EAAWE,KAGxCP,EAAeL,EAAQI,OAEjBF,EAAcH,EAAeC,GAE9Bc,OAAOC,KAAKb,GAAac,eACXhB,EAjDPE,aAkET,SAASe,EAAGjB,EAAQI,EAAMc,OACzBR,EAAYJ,EAAaF,GAE/BJ,EAAOmB,iBAAiBT,EAAWQ,OAE7BhB,EAAcH,EAAeC,GAAQ,GACvCS,EAAYP,EAAYE,GAEvBK,IACHA,EAAYP,EAAYE,GAAQ,IAGlCK,EAAUW,KAAKF,GAIV,SAASG,EAAIrB,EAAQI,EAAMc,GACZnB,EAAeC,KAI/BkB,EAxEC,SAAwBlB,EAAQI,EAAMc,OACrCR,EAAYJ,EAAaF,GAC/BJ,EAAOa,oBAAoBH,EAAWQ,OAEhCT,EAAYN,EAAaH,EAAQI,MAEnCK,EAAW,KACPa,EAAQb,EAAUc,UAAU,SAAAX,UAAYA,IAAaM,KAE5C,IAAXI,GACFb,EAAUe,OAAOF,EAAO,GAGrBb,EAAUO,QACbX,EAAeL,EAAQI,IA2DzBqB,CAAezB,EAAQI,EAAMc,GACpBd,EACTI,EAAgBR,EAAQI,GAnCrB,SAA4BJ,OAC3BE,EAAcH,EAAeC,MAE/BE,MACG,IAAME,KAAQF,EACjBM,EAAgBR,EAAQI,GAgC1BsB,CAAmB1B,IC9GvB,IAAM2B,EAAMC,SAWNC,uBARGC,eAAAA,aAQc,CACrB,QACA,SACA,WACA,eACA,UACA,OACA,QACA,MACA,SACA,cACA,aAGWC,EAAkB,SAACC,EAAIC,OAC7B,IAAMC,KAAQD,EACJ,YAATC,EACFF,EAAGC,MAAME,kBAAaF,EAAME,QAAQ,iBAAQF,EAAME,QAAQ,SAE1DH,EAAGC,MAAMC,GAAQL,EAAeO,SAASF,aAClCD,EAAMC,SACTD,EAAMC,IAKVG,EAAU,CAAC,MAAO,IAAK,QAEhBC,EAAgB,SAACC,EAAKC,EAAOC,OACpCT,MAQC,IAAME,KALTF,EADEK,EAAQD,SAASG,GACdZ,EAAIe,gBAAgB,6BAA8BH,GAElDZ,EAAIW,cAAcC,GAGNC,EACjBR,EAAGW,aAAaT,EAAMM,EAAMN,WAG1BO,GACFA,EAAOG,YAAYZ,GAGdA,GAGIa,EAAW,SAACb,EAAIc,UACXd,EAAGe,UAAUxC,MAAM,KACpB6B,SAASU,IAIbE,EAAW,SAAChB,OAAIiB,yDAAM,MAC5BjB,OACDkB,EAAWlB,EAAGe,UACFE,EAAI1C,MAAM,KAElBI,QAAQ,SAAAmC,GACTA,IAEDd,EAAGmB,UACLnB,EAAGmB,UAAUC,IAAIN,GACPD,EAASb,EAAIc,KACvBI,GAAY,IAAMJ,MAIjBd,EAAGmB,YACNnB,EAAGe,UAAYG,KAKNG,EAAc,SAACrB,EAAIiB,MACzBjB,GAAOiB,WACRK,EAAUL,EAAI1C,MAAM,KACpB2C,EAAW,IAAMlB,EAAGe,UAAY,IAE3BQ,EAAI,EAAGC,EAAIF,EAAQtC,OAAQuC,EAAIC,EAAGD,IAAK,KAC1CT,EAAUQ,EAAQC,GACjBT,IAEDd,EAAGmB,UACLnB,EAAGmB,UAAUM,OAAOX,GACXD,EAASb,EAAIc,KACtBI,EAAWA,EAASQ,QAAQ,IAAMZ,EAAU,IAAK,OAGhDd,EAAGmB,YACNnB,EAAGe,UAAYY,KAAKT,MC9FlBvB,EAAMC,SAENgC,wBAkBQC,2BAhBL,0BAGM,mBAGP,uBAGI,qBAGF,yBAEM,QAGPA,KAAOA,OACPC,WAAaD,EAAKE,SAClBC,QAAUH,EAAKG,aAEf/D,cACAgE,gBACAC,oBACAC,6DAKAJ,IAAMzB,EAAc,MAAO,CAAE8B,MAAO,iBAAmBC,KAAKP,qDAKtBO,KAAKL,QAAxCM,IAAAA,MAAOC,IAAAA,OAAQC,IAAAA,gBACvBzC,EAAgBsC,KAAKN,IAAK,CACxBO,MAAAA,EACAC,OAAAA,EACAC,gBAAAA,mCAKGC,EAAMC,QACNZ,WAAWa,WAAaF,OACxBX,WAAWc,UAAYF,+CAQxBL,KAAKP,WAAWe,wBAFXC,IAAPR,MACQS,IAARR,SAEwBF,KAAKL,QAAvBM,IAAAA,MAAOC,IAAAA,YAEVS,QAAQV,EAAQQ,GAAS,GAAIP,EAASQ,GAAS,wCAKpDE,EAAUZ,KAAKN,IAAK,qBAAsBM,KAAKa,YAAYC,KAAKd,kDAIpDe,IAAAA,MAAOC,IAAAA,QACehB,KAAKP,WAA/Ba,IAAAA,WAAYC,IAAAA,eACfU,uBAAyB,CAC5BF,MAAAA,EACAC,MAAAA,QAEGE,gBAAkB,CACrBZ,WAAAA,EACAC,UAAAA,GAGFK,EAAUtD,EAAK,qBAAsB0C,KAAKmB,UAAUL,KAAKd,OACzDY,EAAUtD,EAAK,mBAAoB0C,KAAKoB,UAAUN,KAAKd,yCAI/CqB,SAC0BrB,KAAKkB,gBAA/BZ,IAAAA,WAAYC,IAAAA,YACKP,KAAKiB,uBAAtBF,IAAAA,MAAOC,IAAAA,MACTM,EAAgBhB,EAAae,EAAMN,MAAQA,EAC3CQ,EAAehB,EAAYc,EAAML,MAAQA,OAE1CL,OAAOW,EAAeC,GAEtBvB,KAAKwB,cACR7C,EAASqB,KAAKN,IAAK,sBACd8B,aAAc,qCAKbC,GACRA,EAAEC,kBACFd,EAAWtD,EAAK,sBAChBsD,EAAWtD,EAAK,yBACXkE,aAAc,EACnBxC,EAAYgB,KAAKN,IAAK,8CAInBiC,QACEA,MAAQA,GAAS,EACtBjE,EAAgBsC,KAAKN,IAAK,CAAEkC,0BAAoB5B,KAAK2B,oDAKvB3B,KAAKL,QAA3BkC,IAAAA,QAASC,IAAAA,cACZC,KAAKC,KAAKC,IAAIjC,KAAK2B,MAAQG,EAAUD,4CAKZ7B,KAAKL,QAA3BuC,IAAAA,QAASJ,IAAAA,cACZC,KAAKC,KAAKG,IAAInC,KAAK2B,MAAQG,EAAUI,6CAInClC,KAAK2B,iBCvID,CACbS,UAAW,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WACnErG,KAAM,MACNkE,MAAO,IACPC,OAAQ,IACRmC,gBAAgB,EAChBC,qBAAqB,EACrBC,aAAa,EACbC,aAAc,IACdC,cAAe,KACftC,gBAAiB,OACjB0B,QAAS,EACTK,QAAS,GACTJ,SAAU,IACVY,WAAY,GACZC,aAAc,GACdC,iBAAiB,EAEjBC,gBAAiB,IACjBC,gBAAiB,GACjBC,eAAgB,IAgDhBC,gBAAiB,CACfC,OAAQ,oBACRC,YAAa,EACbC,cAAe,SACfC,KAAM,QAGRC,cAAe,CACbJ,OAAQ,oBACRC,YAAa,EACbC,cAAe,SACfG,eAAgB,QAChBF,KAAM,QAGRG,YAAa,+GC3EXC,EAGAC,ECXAC,mBCC4DC,qBAKhE,IAAIC,EAAoB,SAA2BC,GAClD,UAIwBA,EAJDA,IAKY,iBAAVA,IAGPA,EAPHA,EAUQ,qBAFnBC,EAAcrH,OAAOsH,UAAUC,SAASC,KAAKJ,KAG7B,kBAAhBC,GACeD,EAQNK,WAAaC,IAb3B,IAAmBN,EACdC,EALoBD,GAcrBM,EADiC,mBAAXC,QAAyBA,OAAOC,IAClBD,OAAOC,IAAI,iBAAmB,MAUtE,SAASC,EAA8BT,EAAOlE,GAC7C,OAA0B,IAAlBA,EAAQ4E,OAAmB5E,EAAQiE,kBAAkBC,GAC1DW,GANiBC,EAMKZ,EALlBa,MAAMC,QAAQF,GAAO,GAAK,IAKAZ,EAAOlE,GACrCkE,EAPJ,IAAqBY,EAUrB,SAASG,EAAkBjJ,EAAQkJ,EAAQlF,GAC1C,OAAOhE,EAAOmJ,OAAOD,GAAQE,IAAI,SAASC,GACzC,OAAOV,EAA8BU,EAASrF,KAYhD,SAASsF,EAAYtJ,EAAQkJ,EAAQlF,GACpC,IAAIuF,EAAc,GAalB,OAZIvF,EAAQiE,kBAAkBjI,IAC7Bc,OAAOC,KAAKf,GAAQW,QAAQ,SAAS6I,GACpCD,EAAYC,GAAOb,EAA8B3I,EAAOwJ,GAAMxF,KAGhElD,OAAOC,KAAKmI,GAAQvI,QAAQ,SAAS6I,GAC/BxF,EAAQiE,kBAAkBiB,EAAOM,KAAUxJ,EAAOwJ,GAGtDD,EAAYC,GAnBf,SAA0BA,EAAKxF,GAC9B,IAAKA,EAAQyF,YACZ,OAAOZ,EAER,IAAIY,EAAczF,EAAQyF,YAAYD,GACtC,MAA8B,mBAAhBC,EAA6BA,EAAcZ,EAcpCa,CAAiBF,EAAKxF,EAAtB0F,CAA+B1J,EAAOwJ,GAAMN,EAAOM,GAAMxF,GAF5EuF,EAAYC,GAAOb,EAA8BO,EAAOM,GAAMxF,KAKzDuF,EAGR,SAASV,EAAU7I,EAAQkJ,EAAQlF,IAClCA,EAAUA,GAAW,IACb2F,WAAa3F,EAAQ2F,YAAcV,EAC3CjF,EAAQiE,kBAAoBjE,EAAQiE,mBAAqBA,EAEzD,IAAI2B,EAAgBb,MAAMC,QAAQE,GAC9BW,EAAgBd,MAAMC,QAAQhJ,GAC9B8J,EAA4BF,IAAkBC,EAElD,OAAKC,EAEMF,EACH5F,EAAQ2F,WAAW3J,EAAQkJ,EAAQlF,GAEnCsF,EAAYtJ,EAAQkJ,EAAQlF,GAJ5B2E,EAA8BO,EAAQlF,GAoB/C,OAZA6E,EAAUkB,IAAM,SAAsBC,EAAOhG,GAC5C,IAAK+E,MAAMC,QAAQgB,GAClB,MAAM,IAAIC,MAAM,qCAGjB,OAAOD,EAAME,OAAO,SAASC,EAAMC,GAClC,OAAOvB,EAAUsB,EAAMC,EAAMpG,IAC3B,KAGc6E,EAnG+DwB,yCCCpEC,EAAY,sCAAIpB,2BAAAA,yBAC3BA,EAASA,EAAOqB,OAAO,SAAAC,WAAUA,IAC1B3B,EAAUkB,IAAIb,EAAQ,CAC3BS,WAAY,SAACc,EAAkBC,UAAgBA,MHE7CC,uBGGG7I,eAAAA,aHHIF,SAAS+I,MAElBC,EAAY,EACZC,EAAY,EAGVC,EAAO,WACPjD,IAEJA,EAAWvF,EAAc,MAAO,CAC9B8B,MAAO,iBAGTuG,EAAK/H,YAAYiF,KAGbkD,EAAgB,cACflD,SAEqBA,EAAShD,wBAA3BP,IAAAA,MAAOC,IAAAA,OAEfxC,EAAgB8F,EAAU,CACxBpD,KAAMmG,EAAYtG,EAAQ,EAC1BI,IAAKmG,EAAYtG,EAHC,MAiDTyG,EAAU,WAChBnD,IACL8C,EAAKM,YAAYpD,GACjBA,EAAW,OIzEPlG,EAAMC,SAENsJ,wBAaQlJ,EAAIgC,iCAXH,mBAGP,uBAGIA,qBAGC,WAGJF,WAA2B,iBAAP9B,EAAkBL,EAAIwJ,cAAcnJ,GAAMA,OAC9DgC,QAAUsG,EAAUjG,KAAKL,QAASA,QAClC/D,cACAmL,iEAKArH,IAAMzB,EACT,MACA,CACE8B,MAAO,kBAETC,KAAKP,0DAMFuH,SAAW,IAAIzH,EAASS,sDAKHA,KAAKL,cACxB,CAAEM,QADDA,MACQC,SADDA,iDAMRF,KAAKgH,SAASC,iDAKhBxH,WAAWmH,YAAY5G,KAAKN,KACjCwH,aCpDEC,wBAgBQxH,0BAdN,0BAGO,uBAGH,CACRyH,SAAU,SACVC,KAAM,KACN9E,aAAa,EACbE,cAAe,KACfD,aAAc,SAIT7C,QAAUsG,EAAUjG,KAAKL,QAASA,QAClC/D,cACAgE,gBACAE,4DAKGwH,EAAUtH,KAAKL,QAAQ0H,KAAvBC,WACH5H,IAAMzB,EAAc,MAAO,CAAE8B,MAAO,cAC1B9B,EAAc,MAAO,CAAE8B,MAAO,mBAAqBC,KAAKN,KAChE6H,UAAYD,2CAKQtH,KAAKL,QAAd0H,KAAVD,WAAUC,MAElB3J,EAAgBsC,KAAKN,IAAK2H,EAAKzJ,OAE3ByJ,EAAK3I,WACPC,EAASqB,KAAKN,IAAK2H,EAAK3I,gDAK1BkC,EAAUZ,KAAKN,IAAK,uBAAwBM,KAAKwH,aAAa1G,KAAKd,OACnEY,EAAUZ,KAAKN,IAAK,uBAAwBM,KAAKyH,aAAa3G,KAAKd,oDAIRA,KAAKL,QAAxD0H,IAAAA,KAAM9E,IAAAA,YAAaE,IAAAA,cAAeD,IAAAA,gBACrCD,OACCmF,EAAUjF,EAAgBA,EAAc4E,EAAMrH,MAAQqH,EAAKC,SAC5DI,OLMiBA,EA7BNC,IKyBa3H,KAAK4H,UAA1B3H,IAAAA,MAAOG,IAAAA,KAAMC,IAAAA,ILICqH,EKHHA,ELIhBlE,GACHiD,IAGFjD,EAASqE,UAAYH,EAIrBnB,EKXsBnG,EAAOH,EAAQ,ELYrCuG,EKZwCnG,EL3BtBsH,EK4BHnF,EL3BVgB,GACHiD,IAGEkB,EACFlE,EAAeqE,WAAW,WACxBnJ,EAAS6E,EAAU,QACnBkD,KACCiB,IAEHhJ,EAAS6E,EAAU,QACnBkD,8CAKGlD,IAEDC,IACFsE,aAAatE,GACbA,EAAe,MAGjBzE,EAAYwE,EAAU,QACtBA,EAAS5F,MAAMwC,KAAO,GACtBoD,EAAS5F,MAAMyC,IAAM,6CKUZL,KAAKN,IAAIc,iEAITR,KAAKL,QAAQ0H,yCAIVjH,EAAMC,GAChB3C,EAAgBsC,KAAKN,IAAK,CACxBU,KAAAA,EACAC,IAAAA,0CAMG2H,WAAahI,KAAKgI,UAAUpB,YAAY5G,KAAKrC,aCrFhDsK,wBAqBQtI,0BAnBN,uBAEI,CAERuI,MAAO,GAEPC,IAAK,GAELC,OAAQ,EAERnF,OAAQ,UAERC,YAAa,EAEbE,KAAM,OAEND,cAAe,WAIf1G,OAAO4L,OAAOrI,KAAKL,QAASA,QACvB/D,wDAoBD0M,IAPAtI,KAAKL,QAPPuI,IAAAA,MACAC,IAAAA,IACAC,IAAAA,OACAnF,IAAAA,OACAC,IAAAA,YACAC,IAAAA,cACAC,IAAAA,KAGImF,EAASL,EAAM,GACfM,EAASN,EAAM,GACfO,EAAON,EAAI,GACXO,EAAOP,EAAI,MAIbnG,KAAK2G,IAAIH,EAASE,GAAQN,EAC5BE,EAAQ,CAAC,IAAKC,EAAQC,EAAQ,IAAKC,EAAMC,OACpC,KACDE,EACML,EAAPE,GAAiBC,EAAOF,GAAqBC,EAATF,GAAiBC,EAASE,EAC3D,EACA,EACAG,GAAUN,EAASE,GAAQ,EAC3BK,EACGP,EAAPE,EACIzG,KAAKC,IAAI4G,EAAST,EAAQK,GAC1BzG,KAAKG,IAAI0G,EAAST,EAAQK,GAMhCH,EAAQ,CACN,IACAC,EACAC,EACA,IACAK,EACAL,EACA,IACAK,EAZOL,EAAPE,EACI1G,KAAKG,IAAIqG,EAAQE,EAAON,GACxBpG,KAAKC,IAAIuG,EAAQE,EAAON,GAY5B,IACAA,EACAA,EACA,EACA,EACAQ,EACAE,EACAJ,EACA,IACAD,EACAC,QAIChJ,IAAMzB,EAAc,OAAQ,CAC/B8K,EAAGT,EAAMU,KAAK,KACd/F,OAAAA,iBACgBC,mBACEC,EAClBC,KAAAA,aCpFA6F,wBAwCQtJ,8BAtCF,CAERuJ,KAAM,KAEN9K,OAAQ,KAER+K,UAAW,QAEX9B,KAAM,qBAID,mBAGD,yBAEM,0BAEC,wBAEF,0BAGE,oBAGN,sBAGE,wBAGE,uBAGA,GAGT5K,OAAO4L,OAAOrI,KAAKL,QAASA,QAEvBvB,OAAS4B,KAAKL,QAAQvB,YACtB8K,KAAOlJ,KAAKL,QAAQuJ,UAEpBE,UAAmC,IAAxBzJ,EAAQ0H,KAAKgC,YAExBzN,wDAIG0N,EAAatJ,KAAbsJ,SAEJA,EAAS3M,cACNyM,UAAYpJ,KAAKuJ,YACtBD,EAAShN,QAAQ,SAAAkN,GACfA,EAAMC,mDAOkBzJ,KAAKL,QAAzB0H,IAAAA,KAAM8B,IAAAA,eAETzJ,IAAMzB,EAAc,MAAO,CAC9B8B,gDAA0CoJ,cACxCnJ,KAAKoJ,SAAW,YAAc,WAI7BM,aAEDrC,EAAKiC,UAAYjC,EAAKiC,SAAS3M,cAC5BgN,sBACAC,mBACAC,yDAMCzL,EAAoB4B,KAApB5B,OAAQuB,EAAYK,KAAZL,QACZyH,EAAW,SAET0C,EAAa9J,KAAK8J,UAAY7L,EAClC,MACA,CACE8B,MAAO,kBAETC,KAAKN,KAGmB,SAAtBC,EAAQwJ,UACV/B,EAAW,OACFhJ,GAAuC,SAA7BA,EAAOuB,QAAQwJ,YAClC/B,EAAW,eAGR2C,KAAO,IAAI5C,EAAK,CACnBC,SAAAA,EACAC,KAAM1H,EAAQ0H,KACd9E,YAAavC,KAAKkJ,KAAKvJ,QAAQ4C,YAC/BE,cAAezC,KAAKkJ,KAAKvJ,QAAQ8C,cACjCD,aAAcxC,KAAKkJ,KAAKvJ,QAAQ6C,eAGlCsH,EAAUvL,YAAYyB,KAAK+J,KAAKrK,iDAK3BsK,WAAa/L,EAChB,OACA,CACE8B,MAAO,mBAETC,KAAK8J,iEAMqB9J,KAAKL,QAAzB0H,IAAAA,KAAM8B,IAAAA,UACNG,EAAajC,EAAbiC,SACFW,EAAShM,EAAc,MAAO,CAAE8B,MAAO,6BAExCuJ,SAAWA,EAASvE,IAAI,SAAAyE,OACrBU,EAAa,IAAIjB,EAAM,CAC3BC,KAAMiB,EAAKjB,KACX9K,OAAQ+L,EACRhB,UAAAA,EACA9B,KAAMmC,WAERS,EAAO1L,YAAY2L,EAAWxK,KAEvBwK,IAGS,SAAdf,OACGzJ,IAAI0K,aAAaH,EAAQjK,KAAK8J,gBAE9BpK,IAAInB,YAAY0L,6CAMjBI,EAAOrK,KAAKsK,SAAWrM,EAC3B,MACA,CACEgC,MAAO,OACPC,OAAQ,OACRqK,MAAO,2CACQ,gCAEjBvK,KAAKN,UAGF8K,WAAavM,EAAc,IAAK,KAAMoM,uCAIjCjK,EAAMC,GAChB3C,EAAgBsC,KAAKN,IAAK,CACxBU,KAAAA,EACAC,IAAAA,gDASK,CACLD,KAJWqK,SAASzK,KAAKN,IAAI9B,MAAMwC,KAAM,IAKzCC,IAJUoK,SAASzK,KAAKN,IAAI9B,MAAMyC,IAAK,8CAUlCL,KAAKN,IAAIc,uEAKVuB,EAAO/B,KAAKkJ,KAAKjC,UACfkC,EAAcnJ,KAAKL,QAAnBwJ,UACFuB,EAAY1K,KAAK4H,UACjB+C,EAAW3K,KAAK4K,uBAEjBtB,SAAShN,QAAQ,SAAAkN,OACdqB,EAAerB,EAAM5B,UACrBkD,GACHD,EAAaxK,IAAMqK,EAAUrK,IAAMwK,EAAa3K,OAAS,GAAK6B,EAC3DgJ,GACW,SAAd5B,EACG0B,EAAaG,MAAQN,EAAUtK,KAC/ByK,EAAazK,KAAOsK,EAAUtK,MAAQ2B,EACtCkJ,EAAY,IAAIhD,EAAU,CAC9BC,MAAO,CAACyC,EAASvK,KAAO2B,EAAM4I,EAAStK,IAAM0B,GAC7CoG,IAAK,CAAC4C,EAASD,KAGjBI,EAAKV,WAAWjM,YAAY0M,EAAUvL,mDAMnCM,KAAKsJ,SAAS3M,cAEd6N,WAAW3C,UAAY,GAExB7H,KAAKoJ,eACFG,mEAMH4B,EAAcnL,KAAK5B,OAEnB+M,IACFA,EAAYC,oBACZD,EAAYE,iFAMT/B,SAAShN,QAAQ,SAAAkN,GACpBA,EAAM4B,oBACN5B,EAAM8B,yEAMAnC,EAAcnJ,KAAKL,QAAnBwJ,UACFuB,EAAY1K,KAAK4H,UACjB2D,EAAWvL,KAAK+J,KAAKnC,UACrBvH,EAAMkL,EAASlL,IAAMqK,EAAUrK,IAAMkL,EAASrL,OAAS,QAMtD,CACLE,KALc,SAAd+I,EACIoC,EAASnL,KAAOsK,EAAUtK,KAC1BmL,EAASnL,KAAOsK,EAAUtK,KAAOmL,EAAStL,MAI9CI,IAAAA,gDAKG+I,UAAYpJ,KAAKoJ,SAElBpJ,KAAKoJ,SACPzK,EAASqB,KAAKN,IAAK,aAEnBV,EAAYgB,KAAKN,IAAK,aAGNM,KAAKwL,eACbC,wBAELJ,+BACAD,yBACAE,wEAKDI,EAAQ1L,KAEL0L,EAAMtN,QACXsN,EAAQA,EAAMtN,cAGTsN,WCjSLC,wBAuBQhM,0BArBN,uBAEI,CAER5D,KAAM,YAENmM,MAAO,GAEPC,IAAK,GAELyD,eAAgB,GAEhB3I,OAAQ,UAERC,YAAa,EAEbE,KAAM,OAEND,cAAe,WAIf1G,OAAO4L,OAAOrI,KAAKL,QAASA,QACvB/D,2DAKYoE,KAAKL,QAAd5D,UAGD,gBACE8P,yEAsBLvD,IAPAtI,KAAKL,QAPPuI,IAAAA,MACAC,IAAAA,IACAyD,IAAAA,eACA3I,IAAAA,OACAC,IAAAA,YACAC,IAAAA,cACAC,IAAAA,KAGImF,EAASL,EAAM,GACfM,EAASN,EAAM,GACfO,EAAON,EAAI,GACXO,EAAOP,EAAI,MAIbnG,KAAK2G,IAAID,EAAOF,GAAUoD,EAAgB,KACtCE,EAAM9J,KAAK+J,MAAMrD,EAAOF,IAAWC,EAAOF,IAC1CyD,EAAWhK,KAAKiK,IAAIH,GAAOF,EAAkB,EAC7CM,EAAWlK,KAAKmK,IAAIL,GAAOF,EAAkB,EAC7CQ,EAAc7D,EAASyD,EACvBK,EAAc7D,EAAS0D,EAI7B5D,EAAQ,CACN,IACA8D,EACAC,EACA,IACA5D,EACAC,EACA,IAVkBH,EAASyD,EACTxD,EAAS0D,EAY3B,IACAE,EACAC,OAEG,KACCC,EAA4B,IAAjB7D,EAAOF,GAAgBA,EAClCgE,EAAU7D,EACV8D,EACIjE,EAAPE,GAAwBD,EAAPE,GAAmBD,EAAOF,GAAUG,EAAOF,GACxDoD,EACDA,EACAE,EAAM9J,KAAK+J,MAAMQ,EAAU/D,IAAW8D,EAAU/D,IAChDyD,EAAWhK,KAAKiK,IAAIH,GAAOF,EAAkB,EAC7CM,EAAWlK,KAAKmK,IAAIL,GAAOF,EAAkB,EAC7CQ,EAAc7D,EAASyD,EACvBK,EAAc7D,EAAS0D,EACvBO,EAAclE,EAASyD,EACvBU,EAAclE,EAAS0D,EAE7B5D,EAAQ,CACN,IACA8D,EACAC,EACA,IACAD,EACAC,EACAC,EACAC,EACA9D,EACAC,EACA,IACA4D,EAAUE,EACVD,EACAE,EACAC,EACAD,EACAC,EACA,IACAN,EACAC,EACA,UAIC3M,IAAMzB,EAAc,OAAQ,CAC/B8K,EAAGT,EAAMU,KAAK,KACd/F,OAAAA,iBACgBC,mBACEC,EAClBC,KAAAA,aC5HAuJ,yBAOQhN,sDACJA,kBANK,0BAGA,mBALSsJ,qDAYejJ,KAAKL,QAAQ0H,KAAxCiC,IAAAA,SAAUsD,IAAAA,aACZ3C,EAAShM,EAAc,MAAO,CAAE8B,MAAO,wBACvC8M,EAAqB7M,KAAK8M,0BAC9BxD,EACA,QACAW,GAEI8C,EAAoB/M,KAAK8M,0BAC7BF,EACA,OACA3C,QAGGX,SAAWuD,EAAmB/H,OAAOiI,QACrCrN,IAAInB,YAAY0L,qDAGGX,EAAUH,EAAWc,qBACxCX,EAEEA,EAASvE,IAAI,SAAAyE,OACZU,EAAa,IAAIjB,EAAM,CAC3BC,KAAMgC,EAAKhC,KACX9K,OAAQ8M,EACR/B,UAAAA,EACA9B,KAAMmC,WAERS,EAAO1L,YAAY2L,EAAWxK,KAEvBwK,IAXa,yCAgBjBhB,KAAKlC,SAAStH,IAAInB,YAAYyB,KAAKN,UACnC+L,wBACAlC,iBAEAD,SAAShN,QAAQ,SAAAkN,GACpBA,EAAMC,2DAMHuD,oBACAC,mBAAmB,aACnBA,mBAAmB,oDAKlBlL,EAAO/B,KAAKkJ,KAAKjC,YACGjH,KAAK+J,KAAKnC,UAA5B3H,IAAAA,MAAOC,IAAAA,SACmBF,KAAKkJ,KAAKgE,kBAA7BC,IAAPlN,MAAmBmN,IAARlN,OACbE,GAAQ+M,EAAKlN,EAAQ8B,GAAQ,EAC7B1B,GAAO+M,EAAKlN,EAAS6B,GAAQ,OAE9BsL,WAAaF,EAAK,OAClBG,WAAaF,EAAK,EAEvB1P,EAAgBsC,KAAK8J,UAAW,CAC9B1J,KAAAA,EACAC,IAAAA,+CAKe8I,cACXpH,EAAO/B,KAAKkJ,KAAKjC,UACRsG,EAAUvN,KAAK+J,KAAKnC,UAA3B3H,QAC6BD,KAAKkJ,KAAKvJ,QAAvC+C,IAAAA,WAAYC,IAAAA,aACd6K,EAASxN,KAAKsJ,SAASpD,OAC3B,SAAAsD,UAASA,EAAM7J,QAAQwJ,YAAcA,IAEjCsE,EAAaD,EAAOzI,IAAI,SAAAyE,UAASA,EAAM5B,YAEzC8F,EAAcD,EAAW5H,OAAO,SAAC8H,EAAOC,UACnCD,EAAQC,EAAQ1N,OAAS6B,GAC/B,GAEH2L,IAAgBF,EAAO7Q,OAAS,GAAKgG,MAEjCkL,EAAS7N,KAAKsN,WAAaI,EAAc,EAE7CD,EAAWnR,QAAQ,SAACwR,EAAM7Q,OAClByO,EAAQ8B,EAAOvQ,GACf8Q,EACU,SAAd5E,EACI6E,EAAKX,WAAaE,EAAQxL,EAAO,EAAIW,EAAaoL,EAAK7N,MAAQ8B,EAC/DiM,EAAKX,WAAaE,EAAQxL,EAAO,EAAIW,EAE3CgJ,EAAMuC,YAAYF,EAASF,GAC3BA,GAAUC,EAAK5N,OAAS6B,EAAOY,mDAK3BZ,EAAO/B,KAAKkJ,KAAKjC,UACfoG,EAA2BrN,KAA3BqN,WAAYC,EAAetN,KAAfsN,WACZlL,EAAcpC,KAAKkJ,KAAKvJ,QAAxByC,eAEHkH,SAAShN,QAAQ,SAACkN,EAAOvM,SACFuM,EAAM5B,UAAxB3H,IAAAA,MAAOC,IAAAA,SACOsJ,EAAM0E,cAApB9N,IAAAA,KAAMC,IAAAA,IACRoI,EACwB,SAA5Be,EAAM7J,QAAQwJ,UAAuB/I,EAAOH,EAAQ8B,EAAO3B,EAGvD+N,EAAQ,IAAIxC,EAAM,CACtB5P,KAAM,WACNmM,MAAO,CAACmF,EAAYC,GACpBnF,IAAK,CAACM,EALKpI,EAAMH,EAAS6B,EAAO,GAMjCkB,OAAQb,EAAUnF,GAClBmG,KAAMhB,EAAUnF,KAGlBmR,EAAK5D,WAAWjM,YAAY4P,EAAMzO,gBRpIpC2O,EAAS,EACTC,EAAM,EACJC,EAAY,GACZC,EAAkB,GAiExB,SAASC,EAAiBzJ,EAAS0J,EAAUC,SAE3B,SAAZD,EACKC,EAKL3J,IAAY2J,GApDG3J,EAyDHA,EAxDZtB,IAKFA,EADEsB,EAAQ4J,QACC5J,EAAQ4J,QAIjB5J,EAAQ6J,sBACC7J,EAAQ6J,sBAIjB7J,EAAQ8J,mBACC9J,EAAQ8J,mBAIjB9J,EAAQ+J,kBACC/J,EAAQ+J,kBAIjB/J,EAAQgK,iBACChK,EAAQgK,iBAMVC,GAAMC,kBAyBQjL,KAAKe,EAAS0J,GAC9B1J,EAQLA,EAAQmK,YACVd,IACOI,EAAiBzJ,EAAQmK,WAAYT,EAAUC,kBApE1D,IAAqB3J,EAwFrB,SAASoK,EAAeC,EAAOhO,EAAOqN,EAAU7R,MAGzC0R,EAAUc,EAAMC,OAMhBjO,KAWAxE,GAAa6R,KAQb7R,MAQA0R,EAAUc,EAAMC,IAAIjO,GAAOqN,OAM3B,IAAIxP,EAAI,EAAGA,EAAIqP,EAAUc,EAAMC,IAAIjO,GAAOqN,GAAU/R,OAAQuC,OAC3DqP,EAAUc,EAAMC,IAAIjO,GAAOqN,GAAUxP,KAAOrC,EAAU,CACxD0R,EAAUc,EAAMC,IAAIjO,GAAOqN,GAAUvR,OAAO+B,EAAG,sBAf1CqP,EAAUc,EAAMC,IAAIjO,GAAOqN,QARlCH,EAAUc,EAAMC,IAAIjO,GAAS,YAXxB,IAAItF,KAAQwS,EAAUc,EAAMC,IAC3Bf,EAAUc,EAAMC,IAAIC,eAAexT,KACrCwS,EAAUc,EAAMC,IAAIvT,GAAQ,IAwGpC,SAASyT,EAAMC,EAAQf,EAAU7R,EAAUuC,MAGpCY,KAAKgF,SAIJyK,aAAkB/K,QACtB+K,EAAS,CAACA,IAGP5S,GAA+B,mBAAZ6R,IACtB7R,EAAW6R,EACXA,EAAW,aAIXxP,EArJiBmQ,EAAOhO,EAAOqN,EAAU7R,EAoJvCyS,EAAKtP,KAAKsP,OASTpQ,EAAI,EAAGA,EAAIuQ,EAAO9S,OAAQuC,IACzBE,EACFgQ,EAAepP,KAAMyP,EAAOvQ,GAAIwP,EAAU7R,IAIvC0R,EAAUe,IAAQf,EAAUe,GAAIG,EAAOvQ,KAC1C+P,GAAMS,SAAS1P,KAAMyP,EAAOvQ,GAAIyQ,EAAmBF,EAAOvQ,KApK3CmQ,EAuKLrP,KAvKYqB,EAuKNoO,EAAOvQ,GAvKMwP,EAuKFA,EAvKY7R,EAuKFA,EAtKpC0R,EAAUc,EAAMC,MACnBf,EAAUc,EAAMC,IAAM,IAGnBf,EAAUc,EAAMC,IAAIjO,KACvBkN,EAAUc,EAAMC,IAAIjO,GAAS,IAG1BkN,EAAUc,EAAMC,IAAIjO,GAAOqN,KAC9BH,EAAUc,EAAMC,IAAIjO,GAAOqN,GAAY,IAGzCH,EAAUc,EAAMC,IAAIjO,GAAOqN,GAAU3R,KAAKF,WA6JnCmD,cAnBE2P,EAAmB5T,UACnB,SAAS0F,IAtFpB,SAAsB6N,EAAI7N,EAAG1F,MACtBwS,EAAUe,GAAIvT,QAKjB2S,EACAkB,EAFEjU,EAAS8F,EAAE9F,QAAU8F,EAAEoO,WAGzBjB,EAAU,GACV1P,EAAI,EACJC,EAAI,MAIDuP,KADLL,EAAS,EACQE,EAAUe,GAAIvT,GACzBwS,EAAUe,GAAIvT,GAAMwT,eAAeb,KACrCkB,EAAQnB,EAAiB9S,EAAQ+S,EAAUF,EAAgBc,GAAItK,WAI7DiK,GAAMa,aACJ/T,EACAyS,EAAgBc,GAAItK,QACpB4K,EACY,SAAZlB,EACAjN,KAGF4M,IACAE,EAAUe,GAAIvT,GAAM2S,GAAUkB,MAAQA,EACtChB,EAAQP,GAAUE,EAAUe,GAAIvT,GAAM2S,QAO5CjN,EAAEC,gBAAkB,WAClBD,EAAEsO,cAAe,GAGd7Q,EAAI,EAAGA,GAAKmP,EAAQnP,OACnB0P,EAAQ1P,OACLC,EAAI,EAAGA,EAAIyP,EAAQ1P,GAAGvC,OAAQwC,IAAK,KACU,IAA5CyP,EAAQ1P,GAAGC,GAAG8E,KAAK2K,EAAQ1P,GAAG0Q,MAAOnO,UACvCwN,GAAMe,OAAOvO,MAIXA,EAAEsO,sBAsCRE,CAAaX,EAAI7N,EAAG1F,KAyB1B,SAASkT,GAAMjK,EAASsK,QAEhBtP,gBAAgBiP,IAAQ,KAMvB,IAAI9J,KAAOqJ,KACVA,EAAgBrJ,GAAKH,UAAYA,SAC5BwJ,EAAgBrJ,UAK3BqJ,IADAF,GACuB,IAAIW,GAAMjK,EAASsJ,GAEnCE,EAAgBF,QAGpBtJ,QAAUA,OACVsK,GAAKA,EAWZL,GAAMlL,UAAUnH,GAAK,SAAS6S,EAAQf,EAAU7R,UACvC2S,EAAMvL,KAAKjE,KAAMyP,EAAQf,EAAU7R,IAW5CoS,GAAMlL,UAAU/G,IAAM,SAASyS,EAAQf,EAAU7R,UACxC2S,EAAMvL,KAAKjE,KAAMyP,EAAQf,EAAU7R,GAAU,IAGtDoS,GAAMC,gBAAkB,aACxBD,GAAMe,OAtTN,SAAiBvO,GACfA,EAAEyO,iBACFzO,EAAEC,mBAqTJuN,GAAMS,SA/TN,SAAmBL,EAAOtT,EAAMc,OAI1BsT,EAAqB,SADzBpU,EAAOA,EAAKG,MAAM,KAAK,KACoB,SAARH,EACnCsT,EAAMrK,QAAQlI,iBAAiBf,EAAMc,EAAUsT,IA2TjDlB,GAAMa,aAAe,kBACZ,GShUT,IAAMxS,GAAMC,SAEN6S,0BAOQzS,EAAIgC,sDACRhC,EAAIgC,iBANA,sBAGH,MAKFG,eACA2J,sBAXa5C,4CAgBbwJ,UAAY,IAAI1D,EAAU,CAC7BzD,KAAMlJ,KACNmJ,UAAW,OACX9B,KAAMrH,KAAKL,QAAQ0H,YAGhBgJ,UAAU5G,cACV+D,OPdkB,SAAd8C,EAAeC,OAAOC,yDAAW,WACxCC,EAAO,UAEPF,aAAiB7L,MACnB6L,EAAMjU,QAAQ,SAAAyN,GACZ0G,EAAK1T,KAAKgN,GACV0G,EAAOA,EAAK3L,OAAOwL,EAAYvG,EAAKyG,QAGtCC,EAAK1T,KAAKwT,GACVE,EAAOA,EAAK3L,OAAOwL,EAAYC,EAAMC,MAGhCC,EOCSH,CAAYtQ,KAAKqQ,gDAK/BpB,GAAM3R,IAAKV,GACT,eACA,mBACAoD,KAAK0Q,mBAAmB5P,KAAKd,OAG/BiP,GAAM3R,IAAKV,GAAG,aAAc,aAAcoD,KAAKuD,YAAYzC,KAAKd,kDAI/CyB,OACXkP,EAASlP,EAAE9F,OAAOwT,WAAWA,WAC7BzD,EAAQ1L,KAAK4Q,kBAAkBD,GACrCjF,GAASA,EAAMmF,oDAILpP,WACNkP,EAASlP,EAAE9F,QAEP6C,EAASmS,EAAQ,yBACvBA,EAASA,EAAOxB,eAGZzD,EAAQ1L,KAAK4Q,kBAAkBD,GAEjCjF,GAAS1L,KAAKL,QAAQ4D,kBACnB5D,QAAQ4D,YAAYmI,EAAM/L,QAAQ0H,KAAMqE,EAAM3B,gDAKrCpM,UACTqC,KAAKwN,OAAOsD,KAAK,SAAApF,UAASA,EAAMhM,MAAQ/B,2CAK1C8B,WAAWmH,YAAY5G,KAAKN,KACjCuP,GAAM3R,IAAKN,IAAI,gBACfiS,GAAM3R,IAAKN,IAAI,cACfkK,aC5EE6J,yBAiBQC,EAAMC,EAAItR,4BAfd,oBAGD,kBAGF,uBAEK,CACRsD,OAAQ,UACRC,YAAa,EACbC,cAAe,SACfC,KAAM,cAID4N,KAAOA,OACPC,GAAKA,EACVxU,OAAO4L,OAAOrI,KAAKL,QAASA,QACvB/D,0DAIgDoE,KAAKL,QAAlDsD,IAAAA,OAAQC,IAAAA,YAAaC,IAAAA,cAAeC,IAAAA,KAEtC8N,EAASlR,KAAKkR,MAAQjT,EAAc,OAAQ,CAChDgF,OAAAA,iBACgBC,mBACEC,EAClBC,KAAAA,IAGEpD,KAAKmR,SACPD,EAAM5S,aAAa,IAAK0B,KAAKmR,oBClC7BC,0BACQJ,EAAMC,EAAItR,0CACdqR,EAAMC,EAAItR,eAFGoR,8CAYf/Q,KAAKL,QACH0R,EAAY,CAChBpO,SAPAA,wBACAC,+BACAC,kCACAG,eAQAF,OAPAA,MASI8N,EAASlR,KAAKkR,MAAQjT,EAAc,KACpCqT,EAAQrT,EAAc,OAAQoT,EAAWH,GACzCK,EAAStT,EAAc,OAAQoT,EAAWH,GAEhDI,EAAMhT,aAAa,IAAK0B,KAAKmR,WAC7BI,EAAOjT,aAAa,IAAK0B,KAAKwR,sDAIxBC,EAAQzR,KAAKgR,KAAK,GAClBU,EAAQ1R,KAAKgR,KAAK,GAClBW,EAAM3R,KAAKiR,GAAG,GACdW,EAAM5R,KAAKiR,GAAG,GACdY,EAAwC,GAAxB7P,KAAK2G,IAAI8I,EAAQE,SAMhC,CACL,IACAF,EACAC,EACA,IARQC,EAARF,EAAcA,EAAQI,EAAgBJ,EAAQI,EAU9CH,EARQC,EAARF,EAAcE,EAAME,EAAgBF,EAAME,EAU1CD,EACQD,EAARF,EAAcE,EAAM,GAAKA,EAAM,GAC/BC,EACA,IACAD,EACAC,GACA5I,KAAK,gDAQH8I,EACAC,EALEN,EAAQzR,KAAKgR,KAAK,GAClBW,EAAM3R,KAAKiR,GAAG,GACdW,EAAM5R,KAAKiR,GAAG,UAOlBc,EAFUJ,EAARF,GACFK,EAAU,CAACH,EAAM,EAAGC,EAAM,GAChB,CAACD,EAAM,EAAGC,EAAM,KAE1BE,EAAU,CAACH,EAAM,EAAGC,EAAM,GAChB,CAACD,EAAM,EAAGC,EAAM,IAGrB,CACL,IACAD,EACAC,EACA,IACAE,EAAQ,GACRA,EAAQ,GACR,IACAH,EACAC,EACA,IACAG,EAAQ,GACRA,EAAQ,GACR,KACA/I,KAAK,cCnFL1L,GAAMC,SAENyU,0BAUQrU,EAAIgC,sDACRhC,EAAIgC,aATJ,sBAEG,wBAEA,0BAEE,MAKXhB,EAASwL,EAAKzK,IAAK,eAEduS,SAAW9H,EAAKT,WAAW/J,EAAQ0H,KAAM,KAEzCkJ,MAAMjU,QAAQ,gBAAGyN,IAAAA,OACf/C,SAAStH,IAAInB,YAAYwL,EAAKrK,SAGhCkK,gBACAsI,iBAEAjE,gBACAkE,kBAAkBhI,EAAK8H,YAEvBnS,0BA3Bc+G,yCA+BVuL,EAAUC,iBACdD,MAEDA,aAAoB1N,aACf0N,EAASrN,IAAI,SAAAsC,OACZiL,EAAUpH,EAAKxB,WAAWrC,EAAKiL,QAASD,EAAO,GAC/C/I,EAAW4B,EAAKxB,WAAWrC,EAAKiC,SAAU+I,EAAO,GAEjDtI,EAAO,CACXA,KAAM,IAAI5C,EAAK,CACbC,SAAU,OACVC,KAAAA,EACA9E,YAAa2I,EAAKvL,QAAQ4C,YAC1BE,cAAeyI,EAAKvL,QAAQ8C,cAC5BD,aAAc0I,EAAKvL,QAAQ6C,eAE7B6P,KAAAA,EACAC,QAAAA,EACAhJ,SAAAA,UAGEgJ,GAAWA,EAAQ3V,OACrBoN,EAAKwI,KAAOD,EAAQzM,OAAO,SAAC8H,EAAOvP,UAAWuP,EAAQvP,EAAOmU,MAAM,GAC1DjJ,GAAYA,EAAS3M,OAC9BoN,EAAKwI,KAAOjJ,EAASzD,OAAO,SAAC8H,EAAOnE,UAAUmE,EAAQnE,EAAM+I,MAAM,GAElExI,EAAKwI,KAAO,EAGdrH,EAAKqF,MAAMxT,KAAKgN,GAETA,QAGHA,EAAO,CACXA,KAAM,IAAI5C,EAAK,CACbC,SAAU,OACVC,KAAM+K,EACN7P,YAAavC,KAAKL,QAAQ4C,YAC1BE,cAAezC,KAAKL,QAAQ8C,cAC5BD,aAAcxC,KAAKL,QAAQ6C,eAE7B6P,KAAAA,EACAC,QAAStS,KAAK0J,WAAW0I,EAASE,QAASD,EAAO,GAClD/I,SAAUtJ,KAAK0J,WAAW0I,EAAS9I,SAAU+I,EAAO,gBAGjD9B,MAAMxT,KAAKgN,GACTA,6CAMHM,EAAOrK,KAAKsK,SAAWrM,EAC3B,MACA,CACEgC,MAAO,OACPC,OAAQ,OACRqK,MAAO,2CACQ,gCAEjBvK,KAAKgH,SAAStH,UAGX8K,WAAavM,EAAc,IAAK,KAAMoM,+CAItCmI,gBAAkBvU,EACrB,MACA,CACE8B,MAAO,wBAETC,KAAKgH,SAAStH,iDAMkBM,KAAKL,QAAxBwN,IAAPlN,MAAmBmN,IAARlN,OACbuS,EAAWzS,KAAKiS,SAASlI,OACS0I,EAAS7K,UAAlC8K,IAAPzS,MAAsB0S,IAARzS,OAChBmN,EAAaF,EAAK,EAClBG,EAAaF,EAAK,EAExBqF,EAASxE,YAAYZ,EAAaqF,EAAQ,EAAGpF,EAAaqF,EAAQ,QAE7DC,gBAAgB5S,KAAKiS,SAASK,QAAS,OAAQhF,QAC/CsF,gBAAgB5S,KAAKiS,SAAS3I,SAAU,QAASgE,2CAIxCuF,EAAa1J,EAAWmE,gBAMlCtN,KAAKL,QAJAwN,IAAPlN,MACA8C,IAAAA,eACAF,IAAAA,gBACAC,IAAAA,mBAGG+P,GAAgBA,EAAYlW,YAE3B0Q,EAAaF,EAAK,EAElB2F,EAAYD,EAAYhN,OAC5B,SAAC8H,EAAOoF,UAAYA,EAAQR,KAAO5E,GACnC,GAGEqF,EAAQ,EAEZH,EAAYvW,QAAQ,SAAAyW,OAMdE,EALWP,EAAU1E,EAAKiE,SAASlI,KAAKnC,UAApC3H,QACkB8S,EAAQhJ,KAAKnC,UAA/B3H,IAAAA,MAAOC,IAAAA,OACTgT,EACU,SAAd/J,EAAuB4J,EAAQT,QAAUS,EAAQzJ,SAG/C6J,EACF7F,GACCwF,EAAY,EAAIC,EAAQR,KAAO,EAAIS,GAASlQ,EAC7C5C,EAAS,EAGT+S,EADgB,SAAd9J,EAEAkE,IACErL,KAAK2G,IAAIoK,EAAQV,MAAQ,GAAKxP,EAC9BE,EACA9C,EAAQ,GACVyS,EAAQ,EAGRrF,IACErL,KAAK2G,IAAIoK,EAAQV,MAAQ,GAAKxP,EAC9BE,EACA9C,EAAQ,GACVyS,EAAQ,EAGZK,EAAQhJ,KAAKkE,YAAYgF,EAAME,GAE/BH,GAASD,EAAQR,KAEjBvE,EAAK4E,gBAAgBM,EAAgB/J,EAAWgK,EAAOjT,EAAS,gDAKlD6S,cACRzJ,EAAsByJ,EAAtBzJ,SAAUgJ,EAAYS,EAAZT,QACZc,EAAYpT,KAAKqT,aAAaN,GAEpCzJ,GACEA,EAAShN,QAAQ,SAAAgX,OACPC,EAAoBD,EAAWvJ,KAAKpK,QAAQ0H,KAA5CkM,gBACFC,EAAepF,EAAKiF,aAAaC,GACvClF,EAAKqF,SAASL,EAAWI,EAAcD,GACvCnF,EAAK+D,kBAAkBmB,KAE3BhB,GACEA,EAAQhW,QAAQ,SAAAgX,OACNC,EAAoBR,EAAQhJ,KAAKpK,QAAQ0H,KAAzCkM,gBACFC,EAAepF,EAAKiF,aAAaC,GACvClF,EAAKqF,SAASD,EAAcJ,EAAWG,GACvCnF,EAAK+D,kBAAkBmB,sCAKpBI,EAAaC,EAAYC,SACe5T,KAAKL,QAA5C0D,IAAAA,cAAef,IAAAA,oBACjB0O,EAAO,CACX0C,EAAYtT,KAAOsT,EAAYzT,MAC/ByT,EAAYrT,IAAMqT,EAAYxT,OAAS,GAEnC+Q,EAAK,CAAC0C,EAAWvT,KAAMuT,EAAWtT,IAAMsT,EAAWzT,OAAS,GAE5D2T,EAAO,IAAIzC,GAASJ,EAAMC,EAAI5N,QAC/BmH,WAAWjM,YAAYsV,EAAK3C,OAE7B5O,GAAuBsR,QACpBE,UAAUJ,EAAaC,EAAYC,qCAIlCF,EAAaC,EAAYC,OAC3BX,GAAQS,EAAYtT,KAAOsT,EAAYzT,MAAQ0T,EAAWvT,MAAQ,EAClE+S,GACHO,EAAYrT,IACXqT,EAAYxT,OAAS,EACrByT,EAAWtT,IACXsT,EAAWzT,OAAS,GACtB,EACI6T,EAAS9V,EACb,MACA,CACE8B,MAAO,cAETC,KAAKwS,iBAEPuB,EAAOxM,UAAYqM,QAEOG,EAAOvT,wBAAzBP,IAAAA,MAAOC,IAAAA,OAEfxC,EAAgBqW,EAAQ,CACtB3T,KAAM6S,EAAOhT,EAAQ,EACrBI,IAAK8S,EAAOjT,EAAS,yCAKvB+O,GAAM3R,IAAKV,GAAG,aAAc,aAAcoD,KAAKuD,YAAYzC,KAAKd,2CAItDyB,WACF8B,EAAgBvD,KAAKL,QAArB4D,YAEJyQ,EAAQvS,EAAE9F,QAEN6C,EAASwV,EAAO,cACtBA,EAAQA,EAAM7E,eAGVpF,EAAO/J,KAAKiU,iBAAiBD,GAC/BjK,GAAQxG,GACVA,EAAYwG,EAAKpK,QAAQ0H,KAAM0C,wCAKtBgJ,OACHhJ,EAASgJ,EAAThJ,OACkBA,EAAKnC,UAAvB3H,IAAAA,MAAOC,IAAAA,SACO6J,EAAKrK,IAAI9B,MAAvBwC,IAAAA,KAAMC,IAAAA,UAEP,CACLJ,MAAAA,EACAC,OAAAA,EACAE,KAAMqK,SAASrK,EAAM,IACrBC,IAAKoK,SAASpK,EAAK,8CAKN1C,OACToV,EAAU/S,KAAKuQ,MAAMO,KAAK,qBAAG/G,KAAgBrK,MAAQ/B,WAEpDoV,GAAWA,EAAQhJ,qBC3R9BlD,EAAKqN,IAAM9D,GACXvJ,EAAKsN,KAAOnC,GACZnL,EAAKuN,SAAWzU"}